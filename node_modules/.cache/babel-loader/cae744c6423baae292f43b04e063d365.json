{"ast":null,"code":"var _jsxFileName = \"/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/pages/Tables/trasladoDependenciaTable.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardBody, Input } from 'reactstrap';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { trasladoColumns } from './columnsData';\nimport { update_bien } from '../../helpers/fetch';\n\nclass TrasladoDependenciaTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeStateBien = async (data, idRol, bien) => {\n      if (idRol === 1) data.fk_estado = 7;\n      data.descripcion = bien.descripcion;\n      data.espacio_fisico = bien.espacio_fisico;\n      data.observaciones = bien.observaciones;\n\n      try {\n        await update_bien(data);\n        this.updateTable(data);\n        alert('ActualizaciÃ³n exitosa');\n      } catch {\n        alert('Error en el servidor');\n      }\n    };\n\n    this.state = {\n      BienesSelected: [],\n      confirm: false,\n      modal: false,\n      loading: false,\n      descripcion: '',\n      espacio_fisico: '',\n      observaciones: '',\n      idBien: '',\n      idEstado: '',\n      selectedBienes: [],\n      allCheck: false\n    };\n    this.changeStateBien = this.changeStateBien.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.handleChange = this.handleChange.bind(this); // this.handleSelectAll = this.handleSelectAll.bind(this)\n  }\n\n  componentDidMount() {\n    const {\n      Bienes\n    } = this.props;\n    this.setState({\n      Bienes\n    });\n  }\n\n  openModal(data) {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      data\n    }));\n  }\n\n  handleChange(e, bien) {\n    const {\n      BienesSelected\n    } = this.state;\n    let isChecked = e.target.checked;\n\n    if (BienesSelected.length === 0) {\n      BienesSelected.push(bien);\n    } else {\n      let index = BienesSelected.findIndex(item => item.id === bien.id);\n\n      if (isChecked) {\n        if (index === -1) {\n          BienesSelected.push(bien);\n        }\n      } else {\n        BienesSelected.splice(index, 1);\n      }\n    }\n\n    this.setState({\n      BienesSelected\n    });\n    this.props.callback(BienesSelected);\n  }\n\n  render() {\n    const {\n      Bienes\n    } = this.props;\n    let columns = trasladoColumns;\n    let rows = [];\n    Bienes.forEach(data => {\n      if (data.usuario) {\n        if (this.props.check) {\n          rows.push({\n            check:\n            /*#__PURE__*/\n            React.createElement(Input, {\n              type: \"checkbox\",\n              id: \"checkbox2\",\n              onChange: e => this.handleChange(e, data),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 32\n              }\n            }),\n            placa: data.placa ? data.placa : '-',\n            descripcion: data.descripcion ? data.descripcion : '-',\n            sede: data.usuario.dependencia.sede.sede ? data.usuario.dependencia.sede.sede : '-',\n            espacio_fisico: data.espacio_fisico ? data.espacio_fisico : '-',\n            dependencia: data.usuario.dependencia.dependencia ? data.usuario.dependencia.dependencia : '-',\n            observaciones: data.observaciones ? data.observaciones : 'Ninguna',\n            id: data.usuario.id\n          });\n        } else {\n          rows.push({\n            placa: data.placa ? data.placa : '-',\n            descripcion: data.descripcion ? data.descripcion : '-',\n            sede: data.usuario.dependencia.sede.sede ? data.usuario.dependencia.sede.sede : '-',\n            espacio_fisico: data.espacio_fisico ? data.espacio_fisico : '-',\n            dependencia: data.usuario.dependencia.dependencia ? data.usuario.dependencia.dependencia : '-',\n            observaciones: data.observaciones ? data.observaciones : 'Ninguna',\n            id: data.usuario.id\n          });\n        }\n      }\n    });\n    const data = {\n      columns,\n      rows\n    };\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(MDBDataTableV5, {\n        responsive: true,\n        bordered: true,\n        searching: false,\n        fullPagination: true,\n        infoLabel: ['', '-', 'de', ''],\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 37\n        }\n      })))))))\n    );\n  }\n\n}\n\nexport default TrasladoDependenciaTable;","map":{"version":3,"sources":["/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/pages/Tables/trasladoDependenciaTable.js"],"names":["React","Component","Container","Row","Col","Card","CardBody","Input","MDBDataTableV5","trasladoColumns","update_bien","TrasladoDependenciaTable","constructor","props","changeStateBien","data","idRol","bien","fk_estado","descripcion","espacio_fisico","observaciones","updateTable","alert","state","BienesSelected","confirm","modal","loading","idBien","idEstado","selectedBienes","allCheck","bind","openModal","handleChange","componentDidMount","Bienes","setState","prevState","e","isChecked","target","checked","length","push","index","findIndex","item","id","splice","callback","render","columns","rows","forEach","usuario","check","placa","sede","dependencia"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardBody, Input } from 'reactstrap';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { trasladoColumns } from './columnsData'\nimport { update_bien } from '../../helpers/fetch'\n\nclass TrasladoDependenciaTable extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            BienesSelected: [],\n\n            confirm: false,\n            modal: false,\n            loading: false,\n\n            descripcion: '',\n            espacio_fisico: '',\n            observaciones: '',\n            idBien: '',\n            idEstado: '',\n\n            selectedBienes: [],\n            allCheck: false,\n        }\n        this.changeStateBien = this.changeStateBien.bind(this)\n        this.openModal = this.openModal.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        // this.handleSelectAll = this.handleSelectAll.bind(this)\n    }\n\n    componentDidMount() {\n        const { Bienes } = this.props\n        this.setState({\n            Bienes\n        })\n    }\n\n    changeStateBien = async (data, idRol, bien) => {\n        if (idRol === 1) data.fk_estado = 7\n        data.descripcion = bien.descripcion\n        data.espacio_fisico = bien.espacio_fisico\n        data.observaciones = bien.observaciones\n        try {\n            await update_bien(data)\n            this.updateTable(data)\n            alert('ActualizaciÃ³n exitosa')\n        } catch {\n            alert('Error en el servidor')\n        }\n    }\n\n    openModal(data) {\n        this.setState(prevState => ({\n            modal: !prevState.modal,\n            data\n        }));\n    }\n\n    handleChange(e, bien) {\n        const { BienesSelected } = this.state\n        let isChecked = e.target.checked;\n        if (BienesSelected.length === 0) {\n            BienesSelected.push(bien)\n        }\n        else {\n            let index = BienesSelected.findIndex(item =>\n                item.id === bien.id\n            )\n            if (isChecked) {\n                if (index === -1) {\n                    BienesSelected.push(bien)\n                }\n            }\n            else {\n                BienesSelected.splice(index, 1)\n            }\n        }\n        this.setState({ BienesSelected })\n        this.props.callback(BienesSelected);\n    }\n\n\n\n    render() {\n        const { Bienes } = this.props;\n        let columns = trasladoColumns\n        let rows = []\n\n        Bienes.forEach(data => {\n            if (data.usuario) {\n                if(this.props.check) {\n                    rows.push({\n                        check: <Input type=\"checkbox\" id=\"checkbox2\" onChange={e => this.handleChange(e, data)} />,\n                        placa: data.placa ? data.placa : '-',\n                        descripcion: data.descripcion ? data.descripcion : '-',\n                        sede: data.usuario.dependencia.sede.sede ? data.usuario.dependencia.sede.sede : '-',\n                        espacio_fisico: data.espacio_fisico ? data.espacio_fisico : '-',\n                        dependencia: data.usuario.dependencia.dependencia ? data.usuario.dependencia.dependencia : '-',\n                        observaciones: data.observaciones ? data.observaciones : 'Ninguna',\n                        id: data.usuario.id,\n                    })\n                }\n                else {\n                    rows.push({\n                        placa: data.placa ? data.placa : '-',\n                        descripcion: data.descripcion ? data.descripcion : '-',\n                        sede: data.usuario.dependencia.sede.sede ? data.usuario.dependencia.sede.sede : '-',\n                        espacio_fisico: data.espacio_fisico ? data.espacio_fisico : '-',\n                        dependencia: data.usuario.dependencia.dependencia ? data.usuario.dependencia.dependencia : '-',\n                        observaciones: data.observaciones ? data.observaciones : 'Ninguna',\n                        id: data.usuario.id,\n                    })\n                }\n            }\n        })\n\n        const data = {\n            columns,\n            rows,\n        }\n\n        return (\n            <React.Fragment>\n                <Container fluid>\n                    <Row>\n                        <Col>\n                            <Card>\n                                <CardBody>\n                                    <MDBDataTableV5\n                                        responsive\n                                        bordered\n                                        searching={false}\n                                        fullPagination={true}\n                                        infoLabel={['', '-', 'de', '']}\n                                        data={data}\n                                    />\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default TrasladoDependenciaTable;"]},"metadata":{},"sourceType":"module"}