{"ast":null,"code":"import axios from 'axios';\nimport jwt from 'jsonwebtoken';\nconst URL = 'https://e0ab7ac4ba5f.ngrok.io';\nconst SECRET_SEED = 'UD2021!';\nconst TOKEN_EXP = '7d';\nconst token = jwt.sign({\n  id: '1231'\n}, SECRET_SEED, {\n  expiresIn: TOKEN_EXP\n}); // BAJA_BIEN: 1,\n// LEVANTAMIENTO: 2,\n// INGRESO_BIEN_ENTRADA: 3,\n// INGRESO_BIEN_SALIDA: 4,\n// TRASLADO_BIENES_INDIVIDUALES: 5,\n// TRASLADO_DEPENDENCIA: 6,\n\nexport const createProcess = data => {\n  return new Promise((resolve, reject) => {\n    axios.post(URL + '/api/process/create', data, {\n      headers: {\n        'Authorization': token\n      }\n    }).then(response => {\n      // handle success\n      console.log(response);\n      resolve(response);\n    }).catch(error => {\n      // handle error\n      console.log(error);\n      reject(error);\n    });\n  });\n}; // Estados\n// 9 Aceptado\n// 3 Rechazado\n\nexport const aceptRejectProcess = data => {\n  return new Promise((resolve, reject) => {\n    axios.post(URL + '/api/process/accept-reject', data, {\n      headers: {\n        'Authorization': token\n      }\n    }).then(response => {\n      // handle success\n      console.log(response);\n      resolve(response);\n    }).catch(error => {\n      // handle error\n      console.log(error);\n      reject(error);\n    });\n  });\n};","map":{"version":3,"sources":["/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/helpers/httpRequest.js"],"names":["axios","jwt","URL","SECRET_SEED","TOKEN_EXP","token","sign","id","expiresIn","createProcess","data","Promise","resolve","reject","post","headers","then","response","console","log","catch","error","aceptRejectProcess"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,MAAMC,GAAG,GAAG,+BAAZ;AACA,MAAMC,WAAW,GAAG,SAApB;AACA,MAAMC,SAAS,GAAG,IAAlB;AACA,MAAMC,KAAK,GAAGJ,GAAG,CAACK,IAAJ,CAAS;AAAEC,EAAAA,EAAE,EAAE;AAAN,CAAT,EAAyBJ,WAAzB,EAAsC;AAAEK,EAAAA,SAAS,EAAEJ;AAAb,CAAtC,CAAd,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMK,aAAa,GAAGC,IAAI,IAAI;AACnC,SAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvCb,IAAAA,KAAK,CAACc,IAAN,CAAWZ,GAAG,GAAC,qBAAf,EAAsCQ,IAAtC,EAA4C;AACxCK,MAAAA,OAAO,EAAE;AACL,yBAAiBV;AADZ;AAD+B,KAA5C,EAKGW,IALH,CAKSC,QAAQ,IAAI;AACjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAL,MAAAA,OAAO,CAACK,QAAD,CAAP;AACD,KATH,EAUGG,KAVH,CAUUC,KAAK,IAAI;AACf;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAR,MAAAA,MAAM,CAACQ,KAAD,CAAN;AACD,KAdH;AAeD,GAhBM,CAAP;AAiBD,CAlBM,C,CAoBP;AACA;AACA;;AACA,OAAO,MAAMC,kBAAkB,GAAGZ,IAAI,IAAI;AACxC,SAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvCb,IAAAA,KAAK,CAACc,IAAN,CAAWZ,GAAG,GAAC,4BAAf,EAA6CQ,IAA7C,EAAmD;AAC/CK,MAAAA,OAAO,EAAE;AACL,yBAAiBV;AADZ;AADsC,KAAnD,EAKGW,IALH,CAKSC,QAAQ,IAAI;AACjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAL,MAAAA,OAAO,CAACK,QAAD,CAAP;AACD,KATH,EAUGG,KAVH,CAUUC,KAAK,IAAI;AACf;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAR,MAAAA,MAAM,CAACQ,KAAD,CAAN;AACD,KAdH;AAeD,GAhBM,CAAP;AAiBD,CAlBM","sourcesContent":["import axios from 'axios'\nimport jwt from 'jsonwebtoken'\n\nconst URL = 'https://e0ab7ac4ba5f.ngrok.io'\nconst SECRET_SEED = 'UD2021!'\nconst TOKEN_EXP = '7d'\nconst token = jwt.sign({ id: '1231' }, SECRET_SEED, { expiresIn: TOKEN_EXP });\n\n// BAJA_BIEN: 1,\n// LEVANTAMIENTO: 2,\n// INGRESO_BIEN_ENTRADA: 3,\n// INGRESO_BIEN_SALIDA: 4,\n// TRASLADO_BIENES_INDIVIDUALES: 5,\n// TRASLADO_DEPENDENCIA: 6,\nexport const createProcess = data => {\n  return new Promise( (resolve, reject) => {\n    axios.post(URL+'/api/process/create', data, { \n        headers: {\n            'Authorization': token\n        }\n    })\n      .then( response => {\n        // handle success\n        console.log(response);\n        resolve(response)\n      })\n      .catch( error => {\n        // handle error\n        console.log(error);\n        reject(error)\n      })\n  })\n}\n\n// Estados\n// 9 Aceptado\n// 3 Rechazado\nexport const aceptRejectProcess = data => {\n  return new Promise( (resolve, reject) => {\n    axios.post(URL+'/api/process/accept-reject', data, { \n        headers: {\n            'Authorization': token\n        }\n    })\n      .then( response => {\n        // handle success\n        console.log(response);\n        resolve(response)\n      })\n      .catch( error => {\n        // handle error\n        console.log(error);\n        reject(error)\n      })\n  })\n}"]},"metadata":{},"sourceType":"module"}