{"ast":null,"code":"import client from './../graphql/client';\nimport md5 from 'md5';\nimport { REGISTER_USER } from './../graphql/mutations';\nimport { LOGIN_USER } from './../graphql/queries'; //Set the logged in user data in local session \n\nexport const setLoggeedInUser = user => {\n  console.log(user);\n  localStorage.setItem('user', JSON.stringify(user));\n}; // Gets the logged in user data from local session \n\nexport const getLoggedInUser = () => {\n  const user = localStorage.getItem('user');\n  if (user) return JSON.parse(user);\n  return null;\n}; //is user is logged in\n\nexport const isUserAuthenticated = () => {\n  return getLoggedInUser() !== null;\n}; // Register Method\n\nexport const register = data => {\n  return client.mutate({\n    mutation: REGISTER_USER,\n    variables: {\n      id: Number(data.id),\n      nombres: data.nombres,\n      apellidos: data.apellidos,\n      correo: data.correo,\n      fk_dependencia: Number(data.dependencia),\n      password: md5(data.password),\n      cargo: data.cargo\n    }\n  }).then(() => {\n    return {\n      id: Number(data.id)\n    };\n  }).catch(error => {\n    throw error;\n  });\n}; // Login Method\n\nexport const login = data => {\n  return client.query({\n    query: LOGIN_USER,\n    variables: {\n      correo: data.correo,\n      password: md5(data.password)\n    }\n  }).then(response => {\n    return response.data.usuario[0];\n  }).catch(error => {\n    throw error;\n  });\n};","map":{"version":3,"sources":["/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/helpers/authUtils.js"],"names":["client","md5","REGISTER_USER","LOGIN_USER","setLoggeedInUser","user","console","log","localStorage","setItem","JSON","stringify","getLoggedInUser","getItem","parse","isUserAuthenticated","register","data","mutate","mutation","variables","id","Number","nombres","apellidos","correo","fk_dependencia","dependencia","password","cargo","then","catch","error","login","query","response","usuario"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,UAAT,QAA2B,sBAA3B,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,IAAD,IAAU;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAG,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAA7B;AACH,CAHM,C,CAKP;;AACA,OAAO,MAAMO,eAAe,GAAG,MAAM;AACjC,QAAMP,IAAI,GAAGG,YAAY,CAACK,OAAb,CAAqB,MAArB,CAAb;AACA,MAAIR,IAAJ,EACI,OAAOK,IAAI,CAACI,KAAL,CAAWT,IAAX,CAAP;AACJ,SAAO,IAAP;AACH,CALM,C,CAOP;;AACA,OAAO,MAAMU,mBAAmB,GAAG,MAAM;AACrC,SAAOH,eAAe,OAAO,IAA7B;AACH,CAFM,C,CAIP;;AACA,OAAO,MAAMI,QAAQ,GAAIC,IAAD,IAAU;AAC9B,SAAOjB,MAAM,CAACkB,MAAP,CAAc;AACjBC,IAAAA,QAAQ,EAAEjB,aADO;AAEjBkB,IAAAA,SAAS,EAAE;AACPC,MAAAA,EAAE,EAAEC,MAAM,CAACL,IAAI,CAACI,EAAN,CADH;AAEPE,MAAAA,OAAO,EAAEN,IAAI,CAACM,OAFP;AAGPC,MAAAA,SAAS,EAAEP,IAAI,CAACO,SAHT;AAIPC,MAAAA,MAAM,EAAER,IAAI,CAACQ,MAJN;AAKPC,MAAAA,cAAc,EAAEJ,MAAM,CAACL,IAAI,CAACU,WAAN,CALf;AAMPC,MAAAA,QAAQ,EAAE3B,GAAG,CAACgB,IAAI,CAACW,QAAN,CANN;AAOPC,MAAAA,KAAK,EAAEZ,IAAI,CAACY;AAPL;AAFM,GAAd,EAYFC,IAZE,CAYI,MAAM;AACT,WAAO;AACHT,MAAAA,EAAE,EAAEC,MAAM,CAACL,IAAI,CAACI,EAAN;AADP,KAAP;AAGH,GAhBE,EAgBAU,KAhBA,CAgBMC,KAAK,IAAI;AACd,UAAMA,KAAN;AACH,GAlBE,CAAP;AAmBH,CApBM,C,CAsBP;;AACA,OAAO,MAAMC,KAAK,GAAIhB,IAAD,IAAU;AAC3B,SAAOjB,MAAM,CAACkC,KAAP,CAAa;AAChBA,IAAAA,KAAK,EAAE/B,UADS;AAEhBiB,IAAAA,SAAS,EAAE;AACPK,MAAAA,MAAM,EAAER,IAAI,CAACQ,MADN;AAEPG,MAAAA,QAAQ,EAAE3B,GAAG,CAACgB,IAAI,CAACW,QAAN;AAFN;AAFK,GAAb,EAOFE,IAPE,CAOIK,QAAQ,IAAI;AACf,WAAOA,QAAQ,CAAClB,IAAT,CAAcmB,OAAd,CAAsB,CAAtB,CAAP;AACH,GATE,EASAL,KATA,CASMC,KAAK,IAAI;AACd,UAAMA,KAAN;AACH,GAXE,CAAP;AAYH,CAbM","sourcesContent":["import client from './../graphql/client';\nimport md5 from 'md5';\nimport { REGISTER_USER } from './../graphql/mutations';\nimport { LOGIN_USER } from './../graphql/queries';\n\n//Set the logged in user data in local session \nexport const setLoggeedInUser = (user) => {\n    console.log(user);\n    localStorage.setItem('user', JSON.stringify(user));\n}\n\n// Gets the logged in user data from local session \nexport const getLoggedInUser = () => {\n    const user = localStorage.getItem('user');\n    if (user)\n        return JSON.parse(user);\n    return null;\n}\n\n//is user is logged in\nexport const isUserAuthenticated = () => {\n    return getLoggedInUser() !== null;\n}\n\n// Register Method\nexport const register = (data) => {\n    return client.mutate({\n        mutation: REGISTER_USER,\n        variables: {\n            id: Number(data.id),\n            nombres: data.nombres,\n            apellidos: data.apellidos,\n            correo: data.correo,\n            fk_dependencia: Number(data.dependencia),\n            password: md5(data.password),\n            cargo: data.cargo,\n        },\n    })\n        .then( () => {\n            return {\n                id: Number(data.id)\n            }\n        }).catch(error => {\n            throw error\n        });\n}\n\n// Login Method\nexport const login = (data) => {\n    return client.query({\n        query: LOGIN_USER,\n        variables: {\n            correo: data.correo,\n            password: md5(data.password),\n        },\n    })\n        .then( response => {\n            return response.data.usuario[0]\n        }).catch(error => {\n            throw error\n        });\n}\n\n"]},"metadata":{},"sourceType":"module"}