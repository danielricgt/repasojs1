{"ast":null,"code":"var _jsxFileName = \"/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/pages/Auth/Register.js\";\nimport React, { Component } from 'react';\nimport { Alert, Button, Card, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { registerUser, emptyError } from '../../store/actions';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { GET_SEDE_DEPENDENCIES } from './../../graphql/queries';\nimport client from './../../graphql/client';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sedes: [],\n      dependencias: [],\n      id: '',\n      apellidos: '',\n      correo: '',\n      nombres: '',\n      username: '',\n      password: '',\n      sede: 1,\n      cargo: '',\n      dependencia: 1,\n      user: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(event, values) {\n    try {\n      await this.props.registerUser(values);\n    } catch (error) {\n      alert('Error en el servidor');\n    }\n  }\n\n  componentDidMount() {\n    client.query({\n      query: GET_SEDE_DEPENDENCIES\n    }).then(result => {\n      this.setState({\n        sedes: result.data.sede\n      });\n      this.setState({\n        dependencias: result.data.sede.find(sede => sede.id === this.state.sede).dependencia\n      });\n    }).catch(() => this.setState({\n      sedes: []\n    }));\n  }\n\n  componentDidUpdate() {\n    if (this.props.user) {\n      setTimeout(() => {\n        this.props.history.push('/');\n      }, 2000);\n    }\n  }\n\n  async ChangeSedes(event) {\n    await this.setState({\n      sede: event.target.value\n    });\n    await this.setState({\n      dependencias: this.state.sedes.find(sede => sede.id === Number(this.state.sede)).dependencia\n    });\n  }\n\n  render() {\n    const errorMessage = 'El campo es requerido';\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"bodyHero\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        xs: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Button, {\n        color: \"primary\",\n        className: \"px-4\",\n        onClick: () => this.props.history.push('/'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, \"Atras\"))),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"wrapper-page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Card, {\n        className: \"overflow-hidden account-card mx-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"bg-muted p-4 text-white text-center position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h4\", {\n        className: \"font-20 m-b-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      }, \"Formulario De Registro\")),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"account-card-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, this.props.user &&\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 49\n        }\n      }, \"Registro Exitoso.\"), this.props.registrationError &&\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 62\n        }\n      }, this.props.registrationError),\n      /*#__PURE__*/\n      React.createElement(AvForm, {\n        className: \"form-horizontal\",\n        onValidSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(AvField, {\n        label: \"N\\xB0 Identificaci\\xF3n\",\n        placeholder: \"Ingrese su n\\xFAmero de identificaci\\xF3n\",\n        name: \"id\",\n        type: \"text\",\n        grid: {\n          xs: 8\n        },\n        validate: {\n          required: {\n            value: true,\n            errorMessage: errorMessage\n          },\n          pattern: {\n            value: '^[0-9]+$',\n            errorMessage: 'Solo valores númericos'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 33\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(AvField, {\n        label: \"Nombre\",\n        placeholder: \"Ingrese su nombre\",\n        name: \"nombres\",\n        type: \"text\",\n        grid: {\n          xs: 8\n        },\n        validate: {\n          required: {\n            value: true,\n            errorMessage: errorMessage\n          },\n          pattern: {\n            value: '^[A-Za-z]+$',\n            errorMessage: 'Solo valores alfanuméricos'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(AvField, {\n        label: \"Apellidos\",\n        placeholder: \"Ingrese sus apellidos\",\n        name: \"apellidos\",\n        type: \"text\",\n        grid: {\n          xs: 8\n        },\n        validate: {\n          required: {\n            value: true,\n            errorMessage: errorMessage\n          },\n          pattern: {\n            value: '^[A-Za-z]+$',\n            errorMessage: 'Solo valores alfanuméricos'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(AvField, {\n        label: \"Correo\",\n        placeholder: \"Ingrese su correo\",\n        name: \"correo\",\n        type: \"text\",\n        grid: {\n          xs: 8\n        },\n        validate: {\n          required: {\n            value: true,\n            errorMessage: errorMessage\n          },\n          pattern: {\n            value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9]+(?:\\.[a-zA-Z0-9-]+)*$/,\n            errorMessage: 'Error en el email' // pattern: { value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+udistrital\\.edu\\.co$/, errorMessage: 'Error en el email'}\n\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 33\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(AvField, {\n        label: \"Sede\",\n        name: \"sede\",\n        type: \"select\",\n        value: this.state.sede,\n        grid: {\n          xs: 8\n        },\n        validate: {\n          required: {\n            value: true,\n            errorMessage: errorMessage\n          }\n        },\n        onChange: this.ChangeSedes.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"option\", {\n        disabled: true,\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }\n      }, \"Seleccione una sede\"), this.state.sedes.length === 0 ?\n      /*#__PURE__*/\n      React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }\n      }) : this.state.sedes.map(({\n        id,\n        sede\n      }) =>\n      /*#__PURE__*/\n      React.createElement(\"option\", {\n        value: id,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 45\n        }\n      }, sede))),\n      /*#__PURE__*/\n      React.createElement(AvField, {\n        label: \"Dependencia\",\n        name: \"dependencia\",\n        type: \"select\",\n        value: this.state.dependencia,\n        grid: {\n          xs: 8\n        },\n        validate: {\n          required: {\n            value: true,\n            errorMessage: errorMessage\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"option\", {\n        disabled: true,\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }\n      }, \"Seleccione una dependencia\"), this.state.dependencias.length === 0 ?\n      /*#__PURE__*/\n      React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 41\n        }\n      }) : this.state.dependencias.map(({\n        id,\n        dependencia\n      }) =>\n      /*#__PURE__*/\n      React.createElement(\"option\", {\n        value: id,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 45\n        }\n      }, dependencia))),\n      /*#__PURE__*/\n      React.createElement(AvField, {\n        label: \"Cargo\",\n        placeholder: \"Ingrese su cargo\",\n        name: \"cargo\",\n        type: \"text\",\n        grid: {\n          xs: 8\n        },\n        validate: {\n          required: {\n            value: true,\n            errorMessage: errorMessage\n          },\n          pattern: {\n            value: '^[A-Za-z]+$',\n            errorMessage: 'Solo valores alfanuméricos'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(AvField, {\n        label: \"Contrase\\xF1a\",\n        placeholder: \"Ingrese su contrase\\xF1a\",\n        name: \"password\",\n        type: \"password\",\n        grid: {\n          xs: 8\n        },\n        validate: {\n          required: {\n            value: true,\n            errorMessage: errorMessage\n          },\n          minLength: {\n            value: 6,\n            errorMessage: 'Minimo 6 digitos'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(AvField, {\n        label: \"Confirme Contrase\\xF1a\",\n        placeholder: \"Ingrese su contrase\\xF1a\",\n        name: \"confirmationPassword\",\n        type: \"password\",\n        grid: {\n          xs: 8\n        },\n        validate: {\n          match: {\n            errorMessage: 'Contraseñas no coinciden',\n            value: 'password'\n          },\n          required: {\n            errorMessage: errorMessage,\n            value: true\n          },\n          minLength: {\n            value: 6,\n            errorMessage: 'Minimo 6 digitos'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"form-group m-t-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: \"12\",\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }\n      }, this.props.loading ?\n      /*#__PURE__*/\n      React.createElement(Button, {\n        color: \"primary\",\n        className: \"w-md waves-effect waves-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 63\n        }\n      }, \"Cargando ...\") :\n      /*#__PURE__*/\n      React.createElement(Button, {\n        color: \"primary\",\n        className: \"w-md waves-effect waves-light\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 45\n        }\n      }, \"Registro\")))))))))\n    );\n  }\n\n}\n\nconst mapStatetoProps = state => {\n  const {\n    user,\n    registrationError,\n    loading\n  } = state.Account;\n  return {\n    user,\n    registrationError,\n    loading\n  };\n};\n\nexport default connect(mapStatetoProps, {\n  registerUser,\n  emptyError\n})(Register);","map":{"version":3,"sources":["/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/pages/Auth/Register.js"],"names":["React","Component","Alert","Button","Card","Row","Col","connect","registerUser","emptyError","AvForm","AvField","GET_SEDE_DEPENDENCIES","client","Register","constructor","props","state","sedes","dependencias","id","apellidos","correo","nombres","username","password","sede","cargo","dependencia","user","handleSubmit","bind","event","values","error","alert","componentDidMount","query","then","result","setState","data","find","catch","componentDidUpdate","setTimeout","history","push","ChangeSedes","target","value","Number","render","errorMessage","registrationError","xs","required","pattern","length","map","minLength","match","loading","mapStatetoProps","Account"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,GAA9B,EAAmCC,GAAnC,QAA8C,YAA9C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,qBAAzC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,gCAAhC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,QAAN,SAAuBb,SAAvB,CAAiC;AAE7Bc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,YAAY,EAAE,EAFL;AAGTC,MAAAA,EAAE,EAAE,EAHK;AAITC,MAAAA,SAAS,EAAE,EAJF;AAKTC,MAAAA,MAAM,EAAE,EALC;AAMTC,MAAAA,OAAO,EAAE,EANA;AAOTC,MAAAA,QAAQ,EAAE,EAPD;AAQTC,MAAAA,QAAQ,EAAE,EARD;AASTC,MAAAA,IAAI,EAAE,CATG;AAUTC,MAAAA,KAAK,EAAE,EAVE;AAWTC,MAAAA,WAAW,EAAE,CAXJ;AAaTC,MAAAA,IAAI,EAAE;AAbG,KAAb;AAgBA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAED,QAAMD,YAAN,CAAmBE,KAAnB,EAA0BC,MAA1B,EAAkC;AAC9B,QAAI;AACA,YAAM,KAAKjB,KAAL,CAAWR,YAAX,CAAwByB,MAAxB,CAAN;AACH,KAFD,CAEE,OAAOC,KAAP,EAAc;AACZC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACH;AACJ;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBvB,IAAAA,MAAM,CAACwB,KAAP,CAAa;AACTA,MAAAA,KAAK,EAAEzB;AADE,KAAb,EAGK0B,IAHL,CAGUC,MAAM,IAAI;AACZ,WAAKC,QAAL,CAAc;AAAEtB,QAAAA,KAAK,EAAEqB,MAAM,CAACE,IAAP,CAAYf;AAArB,OAAd;AACA,WAAKc,QAAL,CAAc;AAAErB,QAAAA,YAAY,EAAEoB,MAAM,CAACE,IAAP,CAAYf,IAAZ,CAAiBgB,IAAjB,CAAsBhB,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAY,KAAKH,KAAL,CAAWS,IAArD,EAA2DE;AAA3E,OAAd;AACH,KANL,EAOKe,KAPL,CAOW,MAAM,KAAKH,QAAL,CAAc;AAAEtB,MAAAA,KAAK,EAAE;AAAT,KAAd,CAPjB;AAQH;;AAED0B,EAAAA,kBAAkB,GAAG;AACjB,QAAG,KAAK5B,KAAL,CAAWa,IAAd,EAAoB;AAChBgB,MAAAA,UAAU,CAAC,MAAM;AACb,aAAK7B,KAAL,CAAW8B,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;AACJ;;AAED,QAAMC,WAAN,CAAkBhB,KAAlB,EAAyB;AACrB,UAAM,KAAKQ,QAAL,CAAc;AAAEd,MAAAA,IAAI,EAAEM,KAAK,CAACiB,MAAN,CAAaC;AAArB,KAAd,CAAN;AACA,UAAM,KAAKV,QAAL,CAAc;AAAErB,MAAAA,YAAY,EAAE,KAAKF,KAAL,CAAWC,KAAX,CAAiBwB,IAAjB,CAAsBhB,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAY+B,MAAM,CAAC,KAAKlC,KAAL,CAAWS,IAAZ,CAAhD,EAAmEE;AAAnF,KAAd,CAAN;AACH;;AAEDwB,EAAAA,MAAM,GAAG;AACL,UAAMC,YAAY,GAAG,uBAArB;AACA;AAAA;AACI,0BAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,0BAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,0BAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,0BAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,SAAS,EAAC,MAAlC;AAAyC,QAAA,OAAO,EAAE,MAAM,KAAKrC,KAAL,CAAW8B,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,CADJ;AAAA;AAMI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,0BAAC,IAAD;AAAM,QAAA,SAAS,EAAC,mCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;AAAK,QAAA,SAAS,EAAC,uDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CAFJ;AAAA;AAKI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAK/B,KAAL,CAAWa,IAAX;AAAA;AAAmB,0BAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFxB,EAKK,KAAKb,KAAL,CAAWsC,iBAAX;AAAA;AAAgC,0BAAC,KAAD;AAAO,QAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAC5B,KAAKtC,KAAL,CAAWsC,iBADiB,CALrC;AAAA;AAQI,0BAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,aAAa,EAAE,KAAKxB,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,0BAAC,OAAD;AAAS,QAAA,KAAK,EAAC,yBAAf;AAAmC,QAAA,WAAW,EAAC,2CAA/C;AAAqF,QAAA,IAAI,EAAC,IAA1F;AAA+F,QAAA,IAAI,EAAC,MAApG;AAA2G,QAAA,IAAI,EAAE;AAAEyB,UAAAA,EAAE,EAAE;AAAN,SAAjH;AAA4H,QAAA,QAAQ,EAAE;AAClIC,UAAAA,QAAQ,EAAE;AAAEN,YAAAA,KAAK,EAAE,IAAT;AAAeG,YAAAA,YAAY,EAAEA;AAA7B,WADwH;AAElII,UAAAA,OAAO,EAAE;AAAEP,YAAAA,KAAK,EAAE,UAAT;AAAqBG,YAAAA,YAAY,EAAE;AAAnC;AAFyH,SAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAAA;AAKI,0BAAC,OAAD;AAAS,QAAA,KAAK,EAAC,QAAf;AAAwB,QAAA,WAAW,EAAC,mBAApC;AAAwD,QAAA,IAAI,EAAC,SAA7D;AAAuE,QAAA,IAAI,EAAC,MAA5E;AAAmF,QAAA,IAAI,EAAE;AAAEE,UAAAA,EAAE,EAAE;AAAN,SAAzF;AAAoG,QAAA,QAAQ,EAAE;AAC1GC,UAAAA,QAAQ,EAAE;AAAEN,YAAAA,KAAK,EAAE,IAAT;AAAeG,YAAAA,YAAY,EAAEA;AAA7B,WADgG;AAE1GI,UAAAA,OAAO,EAAE;AAAEP,YAAAA,KAAK,EAAE,aAAT;AAAwBG,YAAAA,YAAY,EAAE;AAAtC;AAFiG,SAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ;AAAA;AASI,0BAAC,OAAD;AAAS,QAAA,KAAK,EAAC,WAAf;AAA2B,QAAA,WAAW,EAAC,uBAAvC;AAA+D,QAAA,IAAI,EAAC,WAApE;AAAgF,QAAA,IAAI,EAAC,MAArF;AAA4F,QAAA,IAAI,EAAE;AAAEE,UAAAA,EAAE,EAAE;AAAN,SAAlG;AAA6G,QAAA,QAAQ,EAAE;AACnHC,UAAAA,QAAQ,EAAE;AAAEN,YAAAA,KAAK,EAAE,IAAT;AAAeG,YAAAA,YAAY,EAAEA;AAA7B,WADyG;AAEnHI,UAAAA,OAAO,EAAE;AAAEP,YAAAA,KAAK,EAAE,aAAT;AAAwBG,YAAAA,YAAY,EAAE;AAAtC;AAF0G,SAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ;AAAA;AAaI,0BAAC,OAAD;AAAS,QAAA,KAAK,EAAC,QAAf;AAAwB,QAAA,WAAW,EAAC,mBAApC;AAAwD,QAAA,IAAI,EAAC,QAA7D;AAAsE,QAAA,IAAI,EAAC,MAA3E;AAAkF,QAAA,IAAI,EAAE;AAAEE,UAAAA,EAAE,EAAE;AAAN,SAAxF;AAAmG,QAAA,QAAQ,EAAE;AACzGC,UAAAA,QAAQ,EAAE;AAAEN,YAAAA,KAAK,EAAE,IAAT;AAAeG,YAAAA,YAAY,EAAEA;AAA7B,WAD+F;AAEzGI,UAAAA,OAAO,EAAE;AAAEP,YAAAA,KAAK,EAAE,qEAAT;AAAgFG,YAAAA,YAAY,EAAE,mBAA9F,CACT;;AADS;AAFgG,SAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ;AAAA;AAmBI,0BAAC,OAAD;AAAS,QAAA,KAAK,EAAC,MAAf;AAAsB,QAAA,IAAI,EAAC,MAA3B;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAgD,QAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWS,IAAlE;AAAwE,QAAA,IAAI,EAAE;AAAE6B,UAAAA,EAAE,EAAE;AAAN,SAA9E;AAAyF,QAAA,QAAQ,EAAE;AAC/FC,UAAAA,QAAQ,EAAE;AAAEN,YAAAA,KAAK,EAAE,IAAT;AAAeG,YAAAA,YAAY,EAAEA;AAA7B;AADqF,SAAnG;AAEG,QAAA,QAAQ,EAAE,KAAKL,WAAL,CAAiBjB,IAAjB,CAAsB,IAAtB,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,KAAK,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHJ,EAIK,KAAKd,KAAL,CAAWC,KAAX,CAAiBwC,MAAjB,KAA4B,CAA5B;AAAA;AACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GAGG,KAAKzC,KAAL,CAAWC,KAAX,CAAiByC,GAAjB,CAAqB,CAAC;AAAEvC,QAAAA,EAAF;AAAMM,QAAAA;AAAN,OAAD;AAAA;AACjB;AAAQ,QAAA,KAAK,EAAEN,EAAf;AAAmB,QAAA,GAAG,EAAEA,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BM,IAA7B,CADJ,CAPR,CAnBJ;AAAA;AA8BI,0BAAC,OAAD;AAAS,QAAA,KAAK,EAAC,aAAf;AAA6B,QAAA,IAAI,EAAC,aAAlC;AAAgD,QAAA,IAAI,EAAC,QAArD;AAA8D,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWW,WAAhF;AAA6F,QAAA,IAAI,EAAE;AAAE2B,UAAAA,EAAE,EAAE;AAAN,SAAnG;AAA8G,QAAA,QAAQ,EAAE;AACpHC,UAAAA,QAAQ,EAAE;AAAEN,YAAAA,KAAK,EAAE,IAAT;AAAeG,YAAAA,YAAY,EAAEA;AAA7B;AAD0G,SAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,KAAK,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAHJ,EAIK,KAAKpC,KAAL,CAAWE,YAAX,CAAwBuC,MAAxB,KAAmC,CAAnC;AAAA;AACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GAGG,KAAKzC,KAAL,CAAWE,YAAX,CAAwBwC,GAAxB,CAA4B,CAAC;AAAEvC,QAAAA,EAAF;AAAMQ,QAAAA;AAAN,OAAD;AAAA;AACxB;AAAQ,QAAA,KAAK,EAAER,EAAf;AAAmB,QAAA,GAAG,EAAEA,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BQ,WAA7B,CADJ,CAPR,CA9BJ;AAAA;AAyCI,0BAAC,OAAD;AAAS,QAAA,KAAK,EAAC,OAAf;AAAuB,QAAA,WAAW,EAAC,kBAAnC;AAAsD,QAAA,IAAI,EAAC,OAA3D;AAAmE,QAAA,IAAI,EAAC,MAAxE;AAA+E,QAAA,IAAI,EAAE;AAAE2B,UAAAA,EAAE,EAAE;AAAN,SAArF;AAAgG,QAAA,QAAQ,EAAE;AACtGC,UAAAA,QAAQ,EAAE;AAAEN,YAAAA,KAAK,EAAE,IAAT;AAAeG,YAAAA,YAAY,EAAEA;AAA7B,WAD4F;AAEtGI,UAAAA,OAAO,EAAE;AAAEP,YAAAA,KAAK,EAAE,aAAT;AAAwBG,YAAAA,YAAY,EAAE;AAAtC;AAF6F,SAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzCJ;AAAA;AA6CI,0BAAC,OAAD;AAAS,QAAA,KAAK,EAAC,eAAf;AAA4B,QAAA,WAAW,EAAC,0BAAxC;AAAgE,QAAA,IAAI,EAAC,UAArE;AAAgF,QAAA,IAAI,EAAC,UAArF;AAAgG,QAAA,IAAI,EAAE;AAAEE,UAAAA,EAAE,EAAE;AAAN,SAAtG;AAAiH,QAAA,QAAQ,EAAE;AACvHC,UAAAA,QAAQ,EAAE;AAAEN,YAAAA,KAAK,EAAE,IAAT;AAAeG,YAAAA,YAAY,EAAEA;AAA7B,WAD6G;AAEvHO,UAAAA,SAAS,EAAE;AAAEV,YAAAA,KAAK,EAAE,CAAT;AAAYG,YAAAA,YAAY,EAAE;AAA1B;AAF4G,SAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7CJ;AAAA;AAiDI,0BAAC,OAAD;AAAS,QAAA,KAAK,EAAC,wBAAf;AAAqC,QAAA,WAAW,EAAC,0BAAjD;AAAyE,QAAA,IAAI,EAAC,sBAA9E;AAAqG,QAAA,IAAI,EAAC,UAA1G;AAAqH,QAAA,IAAI,EAAE;AAAEE,UAAAA,EAAE,EAAE;AAAN,SAA3H;AAAsI,QAAA,QAAQ,EAAE;AAC5IM,UAAAA,KAAK,EAAE;AACHR,YAAAA,YAAY,EAAE,0BADX;AAEHH,YAAAA,KAAK,EAAE;AAFJ,WADqI;AAK5IM,UAAAA,QAAQ,EAAE;AACNH,YAAAA,YAAY,EAAEA,YADR;AAENH,YAAAA,KAAK,EAAE;AAFD,WALkI;AAS5IU,UAAAA,SAAS,EAAE;AAAEV,YAAAA,KAAK,EAAE,CAAT;AAAYG,YAAAA,YAAY,EAAE;AAA1B;AATiI,SAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjDJ;AAAA;AA6DI,0BAAC,GAAD;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,0BAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKrC,KAAL,CAAW8C,OAAX;AAAA;AAAqB,0BAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,SAAS,EAAC,+BAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAArB;AAAA;AACG,0BAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,SAAS,EAAC,+BAAlC;AAAkE,QAAA,IAAI,EAAC,QAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFR,CADJ,CA7DJ,CARJ,CALJ,CADJ,CANJ,CADA;AADJ;AAiGH;;AA1J4B;;AA6JjC,MAAMC,eAAe,GAAG9C,KAAK,IAAI;AAC7B,QAAM;AAAEY,IAAAA,IAAF;AAAQyB,IAAAA,iBAAR;AAA2BQ,IAAAA;AAA3B,MAAuC7C,KAAK,CAAC+C,OAAnD;AACA,SAAO;AAAEnC,IAAAA,IAAF;AAAQyB,IAAAA,iBAAR;AAA2BQ,IAAAA;AAA3B,GAAP;AACH,CAHD;;AAKA,eAAevD,OAAO,CAACwD,eAAD,EAAkB;AAAEvD,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAlB,CAAP,CAAuDK,QAAvD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Alert, Button, Card, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { registerUser, emptyError } from '../../store/actions';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { GET_SEDE_DEPENDENCIES } from './../../graphql/queries'\nimport client from './../../graphql/client'\n\nclass Register extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            sedes: [],\n            dependencias: [],\n            id: '',\n            apellidos: '',\n            correo: '',\n            nombres: '',\n            username: '',\n            password: '',\n            sede: 1,\n            cargo: '',\n            dependencia: 1,\n\n            user: null,\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    async handleSubmit(event, values) {\n        try {\n            await this.props.registerUser(values)\n        } catch (error) {\n            alert('Error en el servidor')\n        }\n    }\n\n    componentDidMount() {\n        client.query({\n            query: GET_SEDE_DEPENDENCIES\n        })\n            .then(result => {\n                this.setState({ sedes: result.data.sede })\n                this.setState({ dependencias: result.data.sede.find(sede => sede.id === this.state.sede).dependencia })\n            })\n            .catch(() => this.setState({ sedes: [] }))\n    }\n\n    componentDidUpdate() {\n        if(this.props.user) {\n            setTimeout(() => { \n                this.props.history.push('/');\n            }, 2000)\n        }   \n    }\n\n    async ChangeSedes(event) {\n        await this.setState({ sede: event.target.value });\n        await this.setState({ dependencias: this.state.sedes.find(sede => sede.id === Number(this.state.sede)).dependencia })\n    }\n\n    render() {\n        const errorMessage = 'El campo es requerido'\n        return (\n            <React.Fragment>\n            <div className=\"bodyHero\">\n                <Row>\n                    <Col xs=\"6\">\n                        <Button color=\"primary\" className=\"px-4\" onClick={() => this.props.history.push('/')}>Atras</Button>\n                    </Col>\n                </Row>\n                <div className=\"wrapper-page\">\n                    <Card className=\"overflow-hidden account-card mx-3\">\n\n                        <div className=\"bg-muted p-4 text-white text-center position-relative\">\n                            <h4 className=\"font-20 m-b-5\">Formulario De Registro</h4>\n                        </div>\n                        <div className=\"account-card-content\">\n\n                            {this.props.user && <Alert color=\"success\">\n                                Registro Exitoso.</Alert> }\n\n                            {this.props.registrationError && <Alert color=\"danger\">\n                                {this.props.registrationError}</Alert>}\n\n                            <AvForm className=\"form-horizontal\" onValidSubmit={this.handleSubmit} >\n                                <AvField label=\"N° Identificación\" placeholder=\"Ingrese su número de identificación\" name=\"id\" type=\"text\" grid={{ xs: 8 }} validate={{\n                                    required: { value: true, errorMessage: errorMessage },\n                                    pattern: { value: '^[0-9]+$', errorMessage: 'Solo valores númericos' },\n                                }} />\n                                <AvField label=\"Nombre\" placeholder=\"Ingrese su nombre\" name=\"nombres\" type=\"text\" grid={{ xs: 8 }} validate={{\n                                    required: { value: true, errorMessage: errorMessage },\n                                    pattern: { value: '^[A-Za-z]+$', errorMessage: 'Solo valores alfanuméricos' },\n                                }} />\n                                <AvField label=\"Apellidos\" placeholder=\"Ingrese sus apellidos\" name=\"apellidos\" type=\"text\" grid={{ xs: 8 }} validate={{\n                                    required: { value: true, errorMessage: errorMessage },\n                                    pattern: { value: '^[A-Za-z]+$', errorMessage: 'Solo valores alfanuméricos' },\n                                }} />\n                                <AvField label=\"Correo\" placeholder=\"Ingrese su correo\" name=\"correo\" type=\"text\" grid={{ xs: 8 }} validate={{\n                                    required: { value: true, errorMessage: errorMessage },\n                                    pattern: { value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9]+(?:\\.[a-zA-Z0-9-]+)*$/, errorMessage: 'Error en el email'}\n                                    // pattern: { value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+udistrital\\.edu\\.co$/, errorMessage: 'Error en el email'}\n\n                                }} />\n                                <AvField label=\"Sede\" name=\"sede\" type='select' value={this.state.sede} grid={{ xs: 8 }} validate={{\n                                    required: { value: true, errorMessage: errorMessage }\n                                }} onChange={this.ChangeSedes.bind(this)}>\n                                    <option disabled value=\"\">Seleccione una sede</option>\n                                    {this.state.sedes.length === 0 ?\n                                        <option></option>\n                                        :\n                                        this.state.sedes.map(({ id, sede }) =>\n                                            <option value={id} key={id}>{sede}</option>\n                                        )}\n                                </AvField>\n                                <AvField label=\"Dependencia\" name=\"dependencia\" type='select' value={this.state.dependencia} grid={{ xs: 8 }} validate={{\n                                    required: { value: true, errorMessage: errorMessage }\n                                }}>\n                                    <option disabled value=\"\">Seleccione una dependencia</option>\n                                    {this.state.dependencias.length === 0 ?\n                                        <option></option>\n                                        :\n                                        this.state.dependencias.map(({ id, dependencia }) =>\n                                            <option value={id} key={id}>{dependencia}</option>\n                                        )}\n                                </AvField>\n                                <AvField label=\"Cargo\" placeholder=\"Ingrese su cargo\" name=\"cargo\" type=\"text\" grid={{ xs: 8 }} validate={{\n                                    required: { value: true, errorMessage: errorMessage },\n                                    pattern: { value: '^[A-Za-z]+$', errorMessage: 'Solo valores alfanuméricos' },\n                                }} />\n                                <AvField label=\"Contraseña\" placeholder=\"Ingrese su contraseña\" name=\"password\" type=\"password\" grid={{ xs: 8 }} validate={{\n                                    required: { value: true, errorMessage: errorMessage },\n                                    minLength: { value: 6, errorMessage: 'Minimo 6 digitos' },\n                                }} />\n                                <AvField label=\"Confirme Contraseña\" placeholder=\"Ingrese su contraseña\" name=\"confirmationPassword\" type=\"password\" grid={{ xs: 8 }} validate={{\n                                    match: {\n                                        errorMessage: 'Contraseñas no coinciden',\n                                        value: 'password',\n                                    },\n                                    required: {\n                                        errorMessage: errorMessage,\n                                        value: true,\n                                    },\n                                    minLength: { value: 6, errorMessage: 'Minimo 6 digitos' },\n                                }} />\n\n                                <Row className=\"form-group m-t-20\">\n                                    <Col md=\"12\" className=\"text-right\">\n                                        {this.props.loading ? <Button color=\"primary\" className=\"w-md waves-effect waves-light\">Cargando ...</Button> :\n                                            <Button color=\"primary\" className=\"w-md waves-effect waves-light\" type=\"submit\" >Registro</Button>}\n                                    </Col>\n                                </Row>\n                            </AvForm>\n\n                        </div>\n                    </Card>\n                </div>\n            </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStatetoProps = state => {\n    const { user, registrationError, loading } = state.Account;\n    return { user, registrationError, loading };\n}\n\nexport default connect(mapStatetoProps, { registerUser, emptyError })(Register);"]},"metadata":{},"sourceType":"module"}