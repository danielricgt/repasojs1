{"ast":null,"code":"var _jsxFileName = \"/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/pages/Tables/transaccionesTable.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardBody, Button, Modal, ModalFooter } from 'reactstrap';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { transaccionesColumns } from './columnsData';\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass TransaccionesTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      BienesData: props.Bienes,\n      Bienes: [],\n      confirm: false,\n      modal: false,\n      loading: false,\n      descripcion: '',\n      espacio_fisico: '',\n      observaciones: '',\n      idBien: '',\n      idEstado: ''\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.openModal = this.openModal.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      Bienes\n    } = this.props;\n    this.setState({\n      Bienes\n    });\n  }\n\n  openModal(data, option) {\n    console.log(data);\n\n    if (option === 1) {\n      this.setState({\n        tx_id: data,\n        modal: true\n      });\n    } else {\n      this.setState({\n        link: data,\n        modal: true\n      });\n    }\n  }\n\n  toggleModal() {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      link: null,\n      tx_id: null\n    }));\n  }\n\n  render() {\n    const {\n      Transactions\n    } = this.props;\n    const {\n      tx_id,\n      link\n    } = this.state;\n    let columns = transaccionesColumns;\n    let rows = []; // if (idRol === 4) {\n    //     columns = columns.slice(0, columns.length - 2)\n    // }   \n\n    Transactions.forEach(data => {\n      rows.push({\n        idBlockchain: !data.tx_id ? 'No se logrÃ³ sincronizar con la blockchain' :\n        /*#__PURE__*/\n        React.createElement(Button, {\n          type: \"button\",\n          color: \"primary\",\n          className: \"waves-effect waves-light\",\n          onClick: () => this.openModal(data.tx_id, 1),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }\n        }, \"Ver\"),\n        fecha: data.fecha ? data.fecha : '-',\n        id: data.fk_usuario ? data.fk_usuario : '-',\n        procedimiento: data.proceso.notificaciones[0].tipo_solicitud.solicitud ? data.proceso.notificaciones[0].tipo_solicitud.solicitud : '-',\n        documentoIPFS:\n        /*#__PURE__*/\n        React.createElement(Button, {\n          type: \"button\",\n          color: \"info\",\n          className: \"waves-effect waves-light\",\n          onClick: () => this.openModal(data.ipfs_link, 2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }\n        }, \"LINK\")\n      });\n    });\n    const data = {\n      columns,\n      rows\n    };\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }\n      }, this.state.confirm ?\n      /*#__PURE__*/\n      React.createElement(SweetAlert, {\n        success: true,\n        title: \"\",\n        onConfirm: this.closeAlert(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 41\n        }\n      }, \"Actualizaci\\xF3n correcta\") :\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 53\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(MDBDataTableV5, {\n        responsive: true,\n        bordered: true,\n        searching: true,\n        fullPagination: true,\n        infoLabel: ['', '-', 'de', ''],\n        data: data,\n        searchTop: true,\n        searchBottom: false,\n        noRecordsFoundLabel: 'No se encontraron resultados',\n        paginationLabel: ['Resutlados', 'Por', 'pagina'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 37\n        }\n      }))))),\n      /*#__PURE__*/\n      React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggleModal,\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"modal-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h6\", {\n        className: \"modal-title mt-0\",\n        id: \"confirmacion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }\n      }, tx_id ? tx_id : link ?\n      /*#__PURE__*/\n      React.createElement(\"a\", {\n        href: `${link}`,\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 33\n        }\n      }, link, \" \") : 'Link no disponible'),\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => this.setState({\n          modal: false\n        }),\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 33\n        }\n      }, \"\\xD7\"))),\n      /*#__PURE__*/\n      React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Button, {\n        type: \"button\",\n        color: \"secondary\",\n        onClick: () => this.setState({\n          modal: false\n        }),\n        className: \"waves-effect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }\n      }, \"Close\")))))\n    );\n  }\n\n}\n\nexport default TransaccionesTable;","map":{"version":3,"sources":["/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/pages/Tables/transaccionesTable.js"],"names":["React","Component","Container","Row","Col","Card","CardBody","Button","Modal","ModalFooter","MDBDataTableV5","transaccionesColumns","SweetAlert","TransaccionesTable","constructor","props","state","BienesData","Bienes","confirm","modal","loading","descripcion","espacio_fisico","observaciones","idBien","idEstado","toggleModal","bind","openModal","componentDidMount","setState","data","option","console","log","tx_id","link","prevState","render","Transactions","columns","rows","forEach","push","idBlockchain","fecha","id","fk_usuario","procedimiento","proceso","notificaciones","tipo_solicitud","solicitud","documentoIPFS","ipfs_link","closeAlert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardBody, Button, Modal, ModalFooter } from 'reactstrap';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { transaccionesColumns } from './columnsData'\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass TransaccionesTable extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            BienesData: props.Bienes,\n            Bienes: [],\n\n            confirm: false,\n            modal: false,\n            loading: false,\n\n            descripcion: '',\n            espacio_fisico: '',\n            observaciones: '',\n            idBien: '',\n            idEstado: '',\n        }\n        this.toggleModal = this.toggleModal.bind(this)\n        this.openModal = this.openModal.bind(this)\n    }\n\n    componentDidMount() {\n        const { Bienes } = this.props\n        this.setState({\n            Bienes\n        })\n    }\n\n\n    openModal(data, option) {\n        console.log(data);\n        if(option === 1) {\n            this.setState({\n                tx_id: data,\n                modal: true\n            });\n        }\n        else {\n            this.setState({\n                link: data,\n                modal: true\n            });\n        }\n    }\n\n    toggleModal() {\n        this.setState(prevState => ({\n            modal: !prevState.modal,\n            link: null,\n            tx_id: null\n        }));\n    }\n\n\n    render() {\n        const { Transactions  } = this.props;\n        const { tx_id, link } = this.state\n        let columns = transaccionesColumns\n        let rows = []\n\n        // if (idRol === 4) {\n        //     columns = columns.slice(0, columns.length - 2)\n        // }   \n\n        Transactions.forEach(data => {\n            rows.push({\n                idBlockchain: !data.tx_id ? 'No se logrÃ³ sincronizar con la blockchain' :\n                    <Button type=\"button\" color=\"primary\" className=\"waves-effect waves-light\" \n                        onClick={() => this.openModal(data.tx_id, 1)}>\n                        Ver\n                    </Button>,\n                fecha: data.fecha ? data.fecha : '-',\n                id: data.fk_usuario ? data.fk_usuario : '-',\n                procedimiento: data.proceso.notificaciones[0].tipo_solicitud.solicitud ? data.proceso.notificaciones[0].tipo_solicitud.solicitud : '-',\n                documentoIPFS:\n                    <Button type=\"button\" color=\"info\" className=\"waves-effect waves-light\" \n                        onClick={() => this.openModal(data.ipfs_link, 2)}>\n                        LINK\n                    </Button>,\n            })\n        })\n\n        const data = {\n            columns,\n            rows,\n        }\n\n\n        return (\n            <React.Fragment>\n                <Container fluid>\n                    <Row>\n                        <Col>\n                            <Card>\n                                <CardBody>\n                                    {this.state.confirm ?\n                                        <SweetAlert success title=\"\" onConfirm={this.closeAlert()} >\n                                            ActualizaciÃ³n correcta\n                                    </SweetAlert> : <p></p>}\n                                    <MDBDataTableV5\n                                        responsive\n                                        bordered\n                                        searching={true}\n                                        fullPagination={true}\n                                        infoLabel={['', '-', 'de', '']}\n                                        data={data}\n                                        searchTop\n                                        searchBottom={false}\n                                        noRecordsFoundLabel={'No se encontraron resultados'}\n                                        paginationLabel={['Resutlados', 'Por', 'pagina']}\n                                    />\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                    <Modal isOpen={this.state.modal} toggle={this.toggleModal} size=\"lg\">\n                        <div className=\"modal-header\">\n                            {/* <h5 className=\"modal-title mt-0\" id=\"confirmacion\">{tx_id ? tx_id : <a href={link}>link</a> }</h5> */}\n                            <h6 className=\"modal-title mt-0\" id=\"confirmacion\">\n                            {\n                                tx_id ? tx_id : \n                                link ?\n                                <a href={`${link}`} target=\"_blank\">{link} </a> : 'Link no disponible'\n                            }\n                            </h6>\n                            <button type=\"button\" onClick={() => this.setState({ modal: false })} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <ModalFooter>\n                            <Button type=\"button\" color=\"secondary\" onClick={ () => this.setState({ modal: false})} className=\"waves-effect\">Close</Button>\n                            {/* <Button type=\"button\" color=\"primary\" className=\"waves-effect waves-light\" onClick={this.changeStateBien}>Confimar</Button> */}\n                        </ModalFooter>\n                    </Modal>\n\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default TransaccionesTable;"]},"metadata":{},"sourceType":"module"}