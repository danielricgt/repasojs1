{"ast":null,"code":"var _jsxFileName = \"/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/pages/Tables/notificacionesTable.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardBody, Button } from 'reactstrap';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { notificacionesColumns } from './columnsData';\n\nclass NotificacionesTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false\n    };\n    this.submitAprobar = this.submitAprobar.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      Bienes\n    } = this.props;\n    this.setState({\n      Bienes\n    });\n  } // 1 baja de bien\n  // 2 levantemiento\n  // 3 Ingreso de bien Entrada\n  // 4 Ingreso de bien Salida\n  // 5 Traslado de bienes individual\n  // 6 Traslado de bienes dependencia\n\n\n  submitAprobar(tipoSolicitud, bien, proceso) {\n    const {\n      props\n    } = this.props;\n\n    switch (tipoSolicitud) {\n      case 1:\n        props.history.push('/aprobacion-baja-bien', {\n          bien,\n          proceso\n        });\n        break;\n\n      case 2:\n        props.history.push('/aprobacion-levantamiento', {\n          bien,\n          proceso\n        });\n        break;\n\n      case 3:\n        props.history.push('/aprobacion-ingreso-entrada', {\n          bien,\n          proceso\n        });\n        break;\n\n      case 4:\n        props.history.push('/aprobacion-ingreso-salida', {\n          bien,\n          proceso\n        });\n        break;\n\n      case 5:\n        props.history.push('/aprobacion-traslado-individual', {\n          bien,\n          proceso\n        });\n        break;\n\n      case 6:\n        props.history.push('/aprobacion-traslado-dependencia', {\n          bien,\n          proceso\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      Notificaciones,\n      idRol\n    } = this.props;\n    let columns = notificacionesColumns;\n    let rows = [];\n    Notificaciones.forEach(data => {\n      if (idRol === 4 || idRol === 1) {\n        rows.push({\n          idProceso: data.proceso.id ? data.proceso.id : '',\n          user_start: data.usuario_origen.nombres + ' ' + data.usuario_origen.apellidos,\n          user_end: data.usuario_destino.nombres + ' ' + data.usuario_destino.apellidos,\n          solicitud: data.tipo_solicitud.solicitud // action: \n          //     <Button type=\"button\" color=\"primary\" className=\"waves-effect waves-light\" \n          //         onClick={() => this.submitAprobar(data.tipo_solicitud.id, data.proceso.bienes, data.proceso)}>\n          //         Aprobar\n          //     </Button>  \n\n        });\n      } else {\n        rows.push({\n          idProceso: data.proceso.id ? data.proceso.id : '',\n          user_start: data.usuario_origen.nombres + ' ' + data.usuario_origen.apellidos,\n          user_end: data.usuario_destino.nombres + ' ' + data.usuario_destino.apellidos,\n          solicitud: data.tipo_solicitud.solicitud,\n          action:\n          /*#__PURE__*/\n          React.createElement(Button, {\n            type: \"button\",\n            color: \"primary\",\n            className: \"waves-effect waves-light\",\n            onClick: () => this.submitAprobar(data.tipo_solicitud.id, data.proceso.bienes, data.proceso),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }\n          }, \"Aprobar\")\n        });\n      }\n    });\n    const data = {\n      columns,\n      rows\n    };\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(MDBDataTableV5, {\n        responsive: true,\n        bordered: true,\n        searching: true,\n        fullPagination: true,\n        infoLabel: ['', '-', 'de', ''],\n        data: data,\n        searchTop: true,\n        searchBottom: false,\n        noRecordsFoundLabel: 'No se encontraron resultados',\n        paginationLabel: ['Resutlados', 'Por', 'pagina'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 37\n        }\n      })))))))\n    );\n  }\n\n}\n\nexport default NotificacionesTable;","map":{"version":3,"sources":["/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/pages/Tables/notificacionesTable.js"],"names":["React","Component","Container","Row","Col","Card","CardBody","Button","MDBDataTableV5","notificacionesColumns","NotificacionesTable","constructor","props","state","loading","submitAprobar","bind","componentDidMount","Bienes","setState","tipoSolicitud","bien","proceso","history","push","render","Notificaciones","idRol","columns","rows","forEach","data","idProceso","id","user_start","usuario_origen","nombres","apellidos","user_end","usuario_destino","solicitud","tipo_solicitud","action","bienes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardBody, Button } from 'reactstrap';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { notificacionesColumns } from './columnsData'\n\nclass NotificacionesTable extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n\n        this.submitAprobar = this.submitAprobar.bind(this)\n    }\n\n    componentDidMount() {\n        const { Bienes } = this.props\n        this.setState({\n            Bienes\n        })\n    }\n\n    // 1 baja de bien\n    // 2 levantemiento\n    // 3 Ingreso de bien Entrada\n    // 4 Ingreso de bien Salida\n    // 5 Traslado de bienes individual\n    // 6 Traslado de bienes dependencia\n    submitAprobar(tipoSolicitud, bien, proceso) {\n        const { props } = this.props\n        switch (tipoSolicitud) {\n            case 1:\n                props.history.push('/aprobacion-baja-bien', { bien, proceso })\n                break;\n            \n            case 2:\n                props.history.push('/aprobacion-levantamiento', { bien, proceso })\n                break;\n            \n            case 3:\n                props.history.push('/aprobacion-ingreso-entrada', { bien, proceso })\n                break;    \n            \n            case 4:\n                props.history.push('/aprobacion-ingreso-salida', { bien, proceso })\n                break;\n            \n            case 5:\n                props.history.push('/aprobacion-traslado-individual', { bien, proceso })\n                break;\n            \n            case 6:\n                props.history.push('/aprobacion-traslado-dependencia', { bien, proceso })\n                break;   \n\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { Notificaciones, idRol } = this.props;\n        let columns = notificacionesColumns\n        let rows = []\n\n        Notificaciones.forEach( data => {\n            if(idRol === 4 || idRol === 1) {\n                rows.push({\n                    idProceso: data.proceso.id ? data.proceso.id : '',\n                    user_start: data.usuario_origen.nombres+' '+data.usuario_origen.apellidos,\n                    user_end: data.usuario_destino.nombres+' '+data.usuario_destino.apellidos,\n                    solicitud: data.tipo_solicitud.solicitud,\n                    // action: \n                    //     <Button type=\"button\" color=\"primary\" className=\"waves-effect waves-light\" \n                    //         onClick={() => this.submitAprobar(data.tipo_solicitud.id, data.proceso.bienes, data.proceso)}>\n                    //         Aprobar\n                    //     </Button>  \n                })\n            }\n            else {\n                rows.push({\n                    idProceso: data.proceso.id ? data.proceso.id : '',\n                    user_start: data.usuario_origen.nombres+' '+data.usuario_origen.apellidos,\n                    user_end: data.usuario_destino.nombres+' '+data.usuario_destino.apellidos,\n                    solicitud: data.tipo_solicitud.solicitud,\n                    action: \n                        <Button type=\"button\" color=\"primary\" className=\"waves-effect waves-light\" \n                            onClick={() => this.submitAprobar(data.tipo_solicitud.id, data.proceso.bienes, data.proceso)}>\n                            Aprobar\n                        </Button>  \n                })\n            }\n        });\n\n        const data = {\n            columns,\n            rows,\n        }\n\n        return (\n            <React.Fragment>\n                <Container fluid>\n                    <Row>\n                        <Col>\n                            <Card>\n                                <CardBody>\n                                    <MDBDataTableV5\n                                        responsive\n                                        bordered\n                                        searching={true}\n                                        fullPagination={true}\n                                        infoLabel={['', '-', 'de', '']}\n                                        data={data}\n                                        searchTop\n                                        searchBottom={false}\n                                        noRecordsFoundLabel={'No se encontraron resultados'}\n                                        paginationLabel={['Resutlados', 'Por', 'pagina']}\n                                    />\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NotificacionesTable;"]},"metadata":{},"sourceType":"module"}