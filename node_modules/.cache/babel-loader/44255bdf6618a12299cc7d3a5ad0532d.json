{"ast":null,"code":"var _jsxFileName = \"/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/pages/Tables/levantamiento.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardBody } from 'reactstrap';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { levantamientoColumns } from './columnsData'; // import { update_bien } from './../../helpers/fetch'\n\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\n\nclass LevantamientoTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      BienesData: props.Bienes,\n      Bienes: [],\n      confirm: false,\n      modal: false,\n      loading: false,\n      estadoBien: '',\n      contratista: '',\n      verificacion: '',\n      observaciones: ''\n    };\n    this.openModal = this.openModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      Bienes\n    } = this.props;\n    this.setState({\n      Bienes\n    });\n  }\n\n  handleChange(e, bien) {\n    const {\n      Bienes\n    } = this.props;\n    const index = Bienes.findIndex(item => item.id === bien.id);\n    const name = e.target.name;\n    Bienes[index][`${name}`] = e.target.value;\n    this.props.callback(Bienes);\n  }\n\n  openModal(data) {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      data\n    }));\n  }\n\n  render() {\n    const {\n      Bienes\n    } = this.props;\n    const errorMessage = 'Campo requerido';\n    let columns = levantamientoColumns;\n    let rows = [];\n    const estadoOptions = [{\n      id: 1,\n      estado: 'En buen estado'\n    }, {\n      id: 2,\n      estado: 'Deteriorado'\n    }, {\n      id: 3,\n      estado: 'Obsoleto'\n    }, {\n      id: 4,\n      estado: 'Perdido'\n    }];\n    const verificacionOptions = [{\n      id: 1,\n      verificacion: 'Verificado'\n    }, {\n      id: 2,\n      verificacion: 'Con Observaciones'\n    }, {\n      id: 3,\n      verificacion: 'Rechazado'\n    }];\n    Bienes.forEach(data => {\n      if (data.usuario) {\n        rows.push({\n          placa: data.placa ? data.placa : '-',\n          sede: data.usuario.dependencia.sede.sede ? data.usuario.dependencia.sede.sede : '-',\n          espacio_fisico: data.espacio_fisico ? data.espacio_fisico : '-',\n          dependencia: data.usuario.dependencia.dependencia ? data.usuario.dependencia.dependencia : '-',\n          marca_serie: data.marca_serie,\n          descripcion: data.descripcion,\n          estado:\n          /*#__PURE__*/\n          React.createElement(AvForm, {\n            className: \"form\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(AvField, {\n            name: \"estadoBien\",\n            id: 'estadoBien' + data.id,\n            type: \"select\",\n            onChange: e => this.handleChange(e, data),\n            value: this.state.estadoBien,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: 'Campo requerido'\n              }\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"option\", {\n            disabled: true,\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }\n          }, \"Seleccione un estado\"), estadoOptions.map(({\n            id,\n            estado\n          }) =>\n          /*#__PURE__*/\n          React.createElement(\"option\", {\n            value: estado,\n            key: id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }\n          }, estado)))),\n          contratista:\n          /*#__PURE__*/\n          React.createElement(AvForm, {\n            className: \"form\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(AvField, {\n            id: 'contratista' + data.id,\n            placeholder: \"Ingrese el contratista\",\n            name: \"contratista\",\n            type: \"text\",\n            onChange: e => this.handleChange(e, data),\n            value: this.state.contratista,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: errorMessage\n              }\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }\n          })),\n          verificacion:\n          /*#__PURE__*/\n          React.createElement(AvForm, {\n            className: \"form\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(AvField, {\n            name: \"verificacion\",\n            id: 'verificacion' + data.id,\n            type: \"select\",\n            value: this.state.verificacion,\n            onChange: e => this.handleChange(e, data),\n            validate: {\n              required: {\n                value: true,\n                errorMessage: 'Campo requerido'\n              }\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"option\", {\n            disabled: true,\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }\n          }, \"Seleccione una opci\\xF3n\"), verificacionOptions.map(({\n            id,\n            verificacion\n          }) =>\n          /*#__PURE__*/\n          React.createElement(\"option\", {\n            value: verificacion,\n            key: id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }\n          }, verificacion)))),\n          observaciones:\n          /*#__PURE__*/\n          React.createElement(AvForm, {\n            className: \"form\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(AvField, {\n            id: 'observaciones' + data.id,\n            placeholder: \"Ingreselas observaciones\",\n            name: \"observaciones\",\n            type: \"text\",\n            value: this.state.observaciones,\n            onChange: e => this.handleChange(e, data),\n            validate: {\n              required: {\n                value: true,\n                errorMessage: errorMessage\n              }\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 25\n            }\n          }))\n        });\n      }\n    });\n    const data = {\n      columns,\n      rows\n    };\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(MDBDataTableV5, {\n        responsive: true,\n        bordered: true,\n        searching: false,\n        fullPagination: true,\n        infoLabel: ['', '-', 'de', ''],\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 37\n        }\n      })))))))\n    );\n  }\n\n}\n\nexport default LevantamientoTable;","map":{"version":3,"sources":["/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/pages/Tables/levantamiento.js"],"names":["React","Component","Container","Row","Col","Card","CardBody","MDBDataTableV5","levantamientoColumns","AvForm","AvField","LevantamientoTable","constructor","props","state","BienesData","Bienes","confirm","modal","loading","estadoBien","contratista","verificacion","observaciones","openModal","bind","handleChange","componentDidMount","setState","e","bien","index","findIndex","item","id","name","target","value","callback","data","prevState","render","errorMessage","columns","rows","estadoOptions","estado","verificacionOptions","forEach","usuario","push","placa","sede","dependencia","espacio_fisico","marca_serie","descripcion","required","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardBody} from 'reactstrap';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { levantamientoColumns } from './columnsData'\n// import { update_bien } from './../../helpers/fetch'\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\n\nclass LevantamientoTable extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            BienesData: props.Bienes,\n            Bienes: [],\n\n            confirm: false,\n            modal: false,\n            loading: false,\n\n            estadoBien: '',\n            contratista: '',\n            verificacion: '',\n            observaciones: '',\n\n        }\n        this.openModal = this.openModal.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    componentDidMount() {\n        const { Bienes } = this.props\n        this.setState({\n            Bienes\n        })\n    }\n\n    handleChange (e, bien) {\n        const { Bienes } = this.props;\n        const index = Bienes.findIndex(item => item.id === bien.id)\n        const name = e.target.name\n        Bienes[index][`${name}`] = e.target.value\n        this.props.callback(Bienes);\n    }\n\n    openModal(data) {\n        this.setState(prevState => ({\n            modal: !prevState.modal,\n            data\n        }));\n    }\n\n\n    render() {\n        const { Bienes } = this.props;\n        const errorMessage = 'Campo requerido'\n        \n        let columns = levantamientoColumns\n        let rows = []\n\n        const estadoOptions = [\n            {\n                id: 1,\n                estado: 'En buen estado'\n            },\n            {\n                id: 2,\n                estado: 'Deteriorado'\n            },\n            {\n                id: 3,\n                estado: 'Obsoleto',\n            },\n            {\n                id: 4,\n                estado: 'Perdido'\n            }\n        ]\n\n        const verificacionOptions = [\n            {\n                id: 1,\n                verificacion: 'Verificado'\n            },\n            {\n                id: 2,\n                verificacion: 'Con Observaciones'\n            },\n            {\n                id: 3,\n                verificacion: 'Rechazado',\n            }\n        ]\n\n        Bienes.forEach(data => {\n            if(data.usuario) {\n                rows.push({\n                    placa: data.placa ? data.placa : '-',\n                    sede: data.usuario.dependencia.sede.sede ? data.usuario.dependencia.sede.sede : '-',\n                    espacio_fisico: data.espacio_fisico ? data.espacio_fisico : '-',\n                    dependencia: data.usuario.dependencia.dependencia ? data.usuario.dependencia.dependencia : '-',\n                    marca_serie: data.marca_serie,\n                    descripcion: data.descripcion,\n                    estado: \n                    <AvForm className=\"form\" >\n                        <AvField name=\"estadoBien\" id={'estadoBien'+data.id} type='select' onChange={e => this.handleChange(e, data)} \n                        value={this.state.estadoBien}\n                        validate={{\n                            required: { value: true, errorMessage: 'Campo requerido' }\n                        }}>\n                            <option disabled value=\"\">Seleccione un estado</option>\n                            {\n                                estadoOptions.map(({ id, estado }) =>\n                                <option value={estado} key={id}>{estado}</option>\n                            )}\n                        </AvField>\n                    </AvForm>,\n                    contratista: \n                    <AvForm className=\"form\">\n                        <AvField id={'contratista'+data.id} placeholder=\"Ingrese el contratista\" name=\"contratista\" \n                        type=\"text\" onChange={e => this.handleChange(e, data)} value={this.state.contratista} validate={{\n                            required: { value: true, errorMessage: errorMessage }\n                        }} />\n                    </AvForm>,\n                    verificacion: \n                    <AvForm className=\"form\" >\n                        <AvField name=\"verificacion\" id={'verificacion'+data.id} type='select' \n                        value={this.state.verificacion} onChange={e => this.handleChange(e, data)}\n                        validate={{\n                            required: { value: true, errorMessage: 'Campo requerido' }\n                        }}>\n                            <option disabled value=\"\">Seleccione una opci&oacute;n</option>\n                            {\n                                verificacionOptions.map(({ id, verificacion }) =>\n                                <option value={verificacion} key={id}>{verificacion}</option>\n                            )}\n                        </AvField>\n                    </AvForm>,\n                    observaciones: \n                    <AvForm className=\"form\">\n                        <AvField id={'observaciones'+data.id} placeholder=\"Ingreselas observaciones\" name=\"observaciones\" \n                        type=\"text\" value={this.state.observaciones} onChange={e => this.handleChange(e, data)} validate={{\n                            required: { value: true, errorMessage: errorMessage }\n                        }} />\n                    </AvForm>,\n                })\n            }\n        })\n\n        const data = {\n            columns,\n            rows,\n        }\n\n        return (\n            <React.Fragment>\n                <Container fluid>\n                    <Row>\n                        <Col>\n                            <Card>\n                                <CardBody>\n                                    <MDBDataTableV5\n                                        responsive\n                                        bordered\n                                        searching={false}\n                                        fullPagination={true}\n                                        infoLabel={['', '-', 'de', '']}\n                                        data={data}\n                                    />\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n\n\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default LevantamientoTable;"]},"metadata":{},"sourceType":"module"}