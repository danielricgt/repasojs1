{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const GET_SEDE_DEPENDENCIES = gql`\n    query getSedeAndDepdendencies {\n        sede(order_by: {id: asc}) {\n            sede\n            id\n            dependencia {\n                dependencia\n                id\n            }\n        }\n    }\n`;\nexport const LOGIN_USER = gql`\n    query loginUsuario($correo: String!, $password: String!) {\n        usuario(where: { correo: { _eq: $correo }, _and: { auth: { password: { _eq: $password } } } }) {\n            id\n            nombres\n            apellidos\n            correo\n            verificado\n            estado {\n                estado\n                id\n            }\n            cargos {\n                cargo\n                id\n            }\n            auth {\n                rol {\n                    rol\n                    id\n                }\n            }\n            dependencia {\n                dependencia\n                id\n                sede {\n                    sede\n                    id\n                }\n            }\n        }\n    }\n`;\nexport const GET_BIENES = option => {\n  let filters = '';\n  let where = '';\n\n  switch (option) {\n    // Dashboard\n    case 1:\n      where = `, where: {_and: [{fk_estado: {_in: [1, 2]}} ]}`;\n      break;\n    // Baja de bien\n\n    case 2:\n      where = `, where: {_and: [{fk_estado: {_in: [1]}} ]}`;\n      break;\n    // alta de bien\n\n    case 3:\n      where = `, where: {_and: [{fk_estado: {_in: [2]}} ]}`;\n      break;\n    // levantamiento\n\n    case 4:\n      // filters = `, $fk_usuario: Int!`\n      where = `, where: {_and: [{fk_estado: {_in: [1]}}, {fk_usuario: {_is_null: false}} ]}`;\n      break;\n    // Dashboard bienes director\n\n    case 5:\n      filters = `, $fk_usuario: Int!`;\n      where = `, where: {_and: [{fk_estado: {_in: [1, 2]}}, {fk_usuario: {_eq: $fk_usuario}}]}`;\n      break;\n    // Alta de bien funcionario\n\n    case 6:\n      filters = `, $fk_usuario: Int!`;\n      where = `, where: {_and: [{fk_estado: {_in: [2]}}, {fk_usuario: {_eq: $fk_usuario}}]}`;\n      break;\n    // Baja de bien funcionario\n\n    case 7:\n      filters = `, $fk_usuario: Int!`;\n      where = `, where: {_and: [{fk_estado: {_in: [1]}}, {fk_usuario: {_eq: $fk_usuario}}]}`;\n      break;\n\n    default:\n      break;\n  }\n\n  return gql`\n        query getBienes($idSede: Int!${filters}) {\n            bien(order_by: {fecha_creacion: desc}${where}) {\n                placa\n                descripcion\n                usuario {\n                    nombres\n                    apellidos\n                    id\n                    dependencia {\n                    dependencia\n                    id\n                    sede {\n                        sede\n                        id\n                    }\n                    }\n                }\n                espacio_fisico\n                observaciones\n                id\n                nombre\n                marca_serie\n                estado {\n                    estado\n                    id\n                }\n                comprobante {\n                    proveedor\n                }\n            }\n            dependencia(where: {fk_sede: {_eq: $idSede}}) {\n                id\n                dependencia\n                fk_sede\n            }\n        }\n    `;\n};\nexport const GET_BIEN_BY_COMPROBANTE = gql`\n    query getBienIdByIdComprobante($idComprobante: Int!) {\n        bien(where: { comprobante: { id: { _eq: $idComprobante } } }) {\n            id\n            contratista\n            fk_estado\n        }\n    }\n`;\nexport const GET_USUARIO_BY_ID = gql`\n    query getUsuarioById($id: Int!) {\n        usuario(where: { id: { _eq: $id } }) {\n            nombres\n            apellidos\n            id\n            correo\n            dependencia {\n                dependencia\n                id\n                sede {\n                    sede\n                    id\n                }\n            }\n            cargos {\n                cargo\n                id\n            }\n            auth {\n                rol {\n                    rol\n                    id\n                }\n            }\n        }\n    }\n`;\nexport const GET_BIEN_COMPROBANTE_BY_ID = gql`\n    query getBienComprobanteByIdBien($id: Int!) {\n        bien(where: { id: { _eq: $id } }) {\n            id\n            contratista\n            fk_estado\n            comprobante {\n                cantidad\n                clase_entrada\n                descripcion_comprobante\n                factura\n                fecha_creacion\n                fk_estado\n                grupo\n                id\n                numero\n                observaciones\n                porcentaje_iva\n                proveedor\n                subtotal\n                subtotal_grupo\n                tipo_contrato\n                total\n                total_cantidad\n                total_cantidad_entrada\n                total_entrada\n                total_iva\n                unidad\n                valor_unitario\n            }\n        }\n    }\n`;\nexport const GET_USER_ENCARGADO_DEPENDENCIA = gql`\n    query getEncargadoDepenedencia($idUsuario: Int!) {\n        encargado_dependencia(where: { fk_usuario: { _eq: $idUsuario } }) {\n            usuario {\n                id\n                nombres\n                apellidos\n                correo\n                cargos {\n                    cargo\n                    fk_usuario\n                }\n            }\n            dependencia {\n                dependencia\n                id\n            }\n        }\n    }\n`;\nexport const GET_BIENES_DEPENDENCIA = rol => {\n  // let where = ''\n  // let variables = ''\n  if (rol === 4) {\n    return gql`query getBienes($idSede: Int!, $idDependencia: Int!, $fk_usuario : Int) {\n            bien(order_by: { fecha_creacion: desc }, where: { _and: [{ fk_usuario: { _eq: $fk_usuario} }, { dependencia: { id: { _eq: $idDependencia } } }] }) {\n                placa\n                descripcion\n                usuario {\n                    nombres\n                    apellidos\n                    id\n                    dependencia {\n                        dependencia\n                        id\n                        sede {\n                            sede\n                            id\n                        }\n                    }\n                }\n                espacio_fisico\n                observaciones\n                id\n                nombre\n                marca_serie\n                estado {\n                    estado\n                    id\n                }\n                fk_usuario\n            }\n            dependencia(where: { fk_sede: { _eq: $idSede } }) {\n                id\n                dependencia\n                fk_sede\n            }\n        }\n        `;\n  } else {\n    return gql`\n        query getBienes($idSede: Int!, $idDependencia: Int!) {\n            bien(order_by: { fecha_creacion: desc }, where: { _and: [{ fk_usuario: { _is_null: false } }, { dependencia: { id: { _eq: $idDependencia } } }] }) {\n                placa\n                descripcion\n                usuario {\n                    nombres\n                    apellidos\n                    id\n                    dependencia {\n                        dependencia\n                        id\n                        sede {\n                            sede\n                            id\n                        }\n                    }\n                }\n                espacio_fisico\n                observaciones\n                id\n                nombre\n                marca_serie\n                estado {\n                    estado\n                    id\n                }\n                fk_usuario\n            }\n            dependencia(where: { fk_sede: { _eq: $idSede } }) {\n                id\n                dependencia\n                fk_sede\n            }\n        }\n        `;\n  }\n};\nexport const GET_DEPENDENCIAS = gql`\n    query getDependencias {\n        dependencia(order_by: {dependencia: asc}) {\n            dependencia\n            id\n        }\n    }\n`;\nexport const GET_USER_PWD = gql`\n    query getUserPw($id: Int!) {\n        usuario_auth(where: { fk_usuario: { _eq: $id } }) {\n            password\n        }\n    }\n`;\nexport const GET_ROLES = gql`\n    query getRoles {\n        rol {\n            id\n            rol\n        }\n    }\n`;\nexport const GET_NOTIFICACIONES = gql`\n    query notificaciones($fk_usuario: Int!) {\n        notificaciones(order_by: { id: asc }, where: { _and: [{ fk_estado: { _nin: [2,3, 9] } }, { fk_usuario_destino: { _eq: $fk_usuario } }] }) {\n            id\n            usuario_destino {\n                id\n                nombres\n                apellidos\n            }\n            usuario_origen {\n                id\n                nombres\n                apellidos\n            }\n            proceso {\n                id\n                bienes\n            }\n            fk_estado\n            tipo_solicitud {\n                id\n                solicitud\n            }\n        }\n    }\n`;\nexport const GET_NOTIFICACIONES_ORIGEN = gql`\n    query notificaciones($fk_usuario: Int!) {\n        notificaciones(order_by: { id: asc }, where: { _and: [{ fk_estado: { _in: [3, 9] } }, { fk_usuario_origen: { _eq: $fk_usuario } }] }) {\n            id\n            usuario_destino {\n                id\n                nombres\n                apellidos\n            }\n            usuario_origen {\n                id\n                nombres\n                apellidos\n            }\n            proceso {\n                id\n                bienes\n            }\n            fk_estado\n            tipo_solicitud {\n                id\n                solicitud\n            }\n        }\n    }\n`;\nexport const GET_NOTIFICACIONES_APROBADOR = gql`\n    query notificaciones($fk_usuario: Int!) {\n        notificaciones(order_by: { id: asc }, where: { _and: [{ fk_estado: { _nin: [2,3, 9] } }, { fk_usuario_aprobador: { _eq: $fk_usuario } }] }) {\n            id\n            usuario_destino {\n                id\n                nombres\n                apellidos\n            }\n            usuario_origen {\n                id\n                nombres\n                apellidos\n            }\n            proceso {\n                id\n                bienes\n            }\n            fk_estado\n            tipo_solicitud {\n                id\n                solicitud\n            }\n        }\n    }\n`;\nexport const GET_USER_DEPENDENCIA = gql`\n    query getEncargadoDependencia($idDependencia: Int!) {\n        encargado_dependencia(where: { fk_dependencia: { _eq: $idDependencia } }) {\n            usuario {\n                id\n                nombres\n                apellidos\n                cargos {\n                    cargo\n                }\n                correo\n            }\n        }\n    }\n`;\nexport const GET_BIENES_NOTIFICATIONS = gql`\n    query getBienesById($_in: [Int!]) {\n        bien(where: { id: { _in: $_in } }) {\n            placa\n            descripcion\n            dependencia {\n                sede {\n                    sede\n                    id\n                }\n                dependencia\n                id\n            }\n            espacio_fisico\n            observaciones\n            hash_bien\n        }\n    }\n`;\nexport const GET_APROBADOR = gql`\n    query getEncargadoDependencia($idDependencia: Int) {\n        encargado_dependencia(where: { fk_dependencia: { _eq: $idDependencia } }) {\n            fk_usuario\n            usuario {\n                id\n                nombres\n                apellidos\n                correo\n                cargos {\n                    cargo\n                }\n            }\n        }\n    }\n`;\nexport const GET_TRANSACTIONS = gql`\n    query getTransactions($fk_usuario: Int) {\n        transacciones(where: { fk_usuario: { _eq: $fk_usuario }},order_by: {fecha: desc}) {\n            tx_id\n            fecha\n            fk_usuario\n            proceso {\n                notificaciones {\n                    tipo_solicitud {\n                        solicitud\n                        id\n                    }\n                }\n            }\n            hash_bc\n            ipfs_link\n        }\n    }\n`;","map":{"version":3,"sources":["/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/graphql/queries.js"],"names":["gql","GET_SEDE_DEPENDENCIES","LOGIN_USER","GET_BIENES","option","filters","where","GET_BIEN_BY_COMPROBANTE","GET_USUARIO_BY_ID","GET_BIEN_COMPROBANTE_BY_ID","GET_USER_ENCARGADO_DEPENDENCIA","GET_BIENES_DEPENDENCIA","rol","GET_DEPENDENCIAS","GET_USER_PWD","GET_ROLES","GET_NOTIFICACIONES","GET_NOTIFICACIONES_ORIGEN","GET_NOTIFICACIONES_APROBADOR","GET_USER_DEPENDENCIA","GET_BIENES_NOTIFICATIONS","GET_APROBADOR","GET_TRANSACTIONS"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,qBAAqB,GAAGD,GAAI;;;;;;;;;;;CAAlC;AAaP,OAAO,MAAME,UAAU,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAvB;AAkCP,OAAO,MAAMG,UAAU,GAAGC,MAAM,IAAI;AAChC,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,UAAQF,MAAR;AACI;AACA,SAAK,CAAL;AACIE,MAAAA,KAAK,GAAI,gDAAT;AACA;AACJ;;AACA,SAAK,CAAL;AACIA,MAAAA,KAAK,GAAI,6CAAT;AACA;AACJ;;AACA,SAAK,CAAL;AACIA,MAAAA,KAAK,GAAI,6CAAT;AACA;AACJ;;AACA,SAAK,CAAL;AACI;AACAA,MAAAA,KAAK,GAAM,8EAAX;AACA;AACJ;;AACA,SAAK,CAAL;AACID,MAAAA,OAAO,GAAI,qBAAX;AACAC,MAAAA,KAAK,GAAI,iFAAT;AACA;AACJ;;AACA,SAAK,CAAL;AACID,MAAAA,OAAO,GAAI,qBAAX;AACAC,MAAAA,KAAK,GAAI,8EAAT;AACA;AACJ;;AACA,SAAK,CAAL;AACID,MAAAA,OAAO,GAAI,qBAAX;AACAC,MAAAA,KAAK,GAAI,8EAAT;AACA;;AAEJ;AACI;AAnCR;;AAsCA,SAAON,GAAI;uCACwBK,OAAQ;mDACIC,KAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAFrD;AAsCH,CA/EM;AAiFP,OAAO,MAAMC,uBAAuB,GAAGP,GAAI;;;;;;;;CAApC;AAUP,OAAO,MAAMQ,iBAAiB,GAAGR,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA9B;AA6BP,OAAO,MAAMS,0BAA0B,GAAGT,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAvC;AAkCP,OAAO,MAAMU,8BAA8B,GAAGV,GAAI;;;;;;;;;;;;;;;;;;;CAA3C;AAqBP,OAAO,MAAMW,sBAAsB,GAAGC,GAAG,IAAI;AACzC;AACA;AACA,MAAIA,GAAG,KAAK,CAAZ,EAAe;AACX,WAAOZ,GACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SADD;AAqCH,GAtCD,MAuCK;AACD,WAAOA,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAAX;AAoCH;AACJ,CAhFM;AAmFP,OAAO,MAAMa,gBAAgB,GAAGb,GAAI;;;;;;;CAA7B;AASP,OAAO,MAAMc,YAAY,GAAGd,GAAI;;;;;;CAAzB;AAQP,OAAO,MAAMe,SAAS,GAAGf,GAAI;;;;;;;CAAtB;AAQP,OAAO,MAAMgB,kBAAkB,GAAGhB,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;CAA/B;AA2BP,OAAO,MAAMiB,yBAAyB,GAAGjB,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;CAAtC;AA2BP,OAAO,MAAMkB,4BAA4B,GAAGlB,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;CAAzC;AA2BP,OAAO,MAAMmB,oBAAoB,GAAGnB,GAAI;;;;;;;;;;;;;;CAAjC;AAgBP,OAAO,MAAMoB,wBAAwB,GAAGpB,GAAI;;;;;;;;;;;;;;;;;;CAArC;AAoBP,OAAO,MAAMqB,aAAa,GAAGrB,GAAI;;;;;;;;;;;;;;;CAA1B;AAkBP,OAAO,MAAMsB,gBAAgB,GAAGtB,GAAI;;;;;;;;;;;;;;;;;;CAA7B","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_SEDE_DEPENDENCIES = gql`\n    query getSedeAndDepdendencies {\n        sede(order_by: {id: asc}) {\n            sede\n            id\n            dependencia {\n                dependencia\n                id\n            }\n        }\n    }\n`;\n\nexport const LOGIN_USER = gql`\n    query loginUsuario($correo: String!, $password: String!) {\n        usuario(where: { correo: { _eq: $correo }, _and: { auth: { password: { _eq: $password } } } }) {\n            id\n            nombres\n            apellidos\n            correo\n            verificado\n            estado {\n                estado\n                id\n            }\n            cargos {\n                cargo\n                id\n            }\n            auth {\n                rol {\n                    rol\n                    id\n                }\n            }\n            dependencia {\n                dependencia\n                id\n                sede {\n                    sede\n                    id\n                }\n            }\n        }\n    }\n`\n\nexport const GET_BIENES = option => {\n    let filters = ''\n    let where = ''\n    switch (option) {\n        // Dashboard\n        case 1:\n            where = `, where: {_and: [{fk_estado: {_in: [1, 2]}} ]}`\n            break;\n        // Baja de bien\n        case 2:\n            where = `, where: {_and: [{fk_estado: {_in: [1]}} ]}`\n            break;\n        // alta de bien\n        case 3:\n            where = `, where: {_and: [{fk_estado: {_in: [2]}} ]}`\n            break;\n        // levantamiento\n        case 4:\n            // filters = `, $fk_usuario: Int!`\n            where   = `, where: {_and: [{fk_estado: {_in: [1]}}, {fk_usuario: {_is_null: false}} ]}`\n            break;\n        // Dashboard bienes director\n        case 5:\n            filters = `, $fk_usuario: Int!`\n            where = `, where: {_and: [{fk_estado: {_in: [1, 2]}}, {fk_usuario: {_eq: $fk_usuario}}]}`\n            break;\n        // Alta de bien funcionario\n        case 6:\n            filters = `, $fk_usuario: Int!`\n            where = `, where: {_and: [{fk_estado: {_in: [2]}}, {fk_usuario: {_eq: $fk_usuario}}]}`\n            break;\n        // Baja de bien funcionario\n        case 7:\n            filters = `, $fk_usuario: Int!`\n            where = `, where: {_and: [{fk_estado: {_in: [1]}}, {fk_usuario: {_eq: $fk_usuario}}]}`\n            break;\n\n        default:\n            break;\n    }\n\n    return gql`\n        query getBienes($idSede: Int!${filters}) {\n            bien(order_by: {fecha_creacion: desc}${where}) {\n                placa\n                descripcion\n                usuario {\n                    nombres\n                    apellidos\n                    id\n                    dependencia {\n                    dependencia\n                    id\n                    sede {\n                        sede\n                        id\n                    }\n                    }\n                }\n                espacio_fisico\n                observaciones\n                id\n                nombre\n                marca_serie\n                estado {\n                    estado\n                    id\n                }\n                comprobante {\n                    proveedor\n                }\n            }\n            dependencia(where: {fk_sede: {_eq: $idSede}}) {\n                id\n                dependencia\n                fk_sede\n            }\n        }\n    `\n}\n\nexport const GET_BIEN_BY_COMPROBANTE = gql`\n    query getBienIdByIdComprobante($idComprobante: Int!) {\n        bien(where: { comprobante: { id: { _eq: $idComprobante } } }) {\n            id\n            contratista\n            fk_estado\n        }\n    }\n`\n\nexport const GET_USUARIO_BY_ID = gql`\n    query getUsuarioById($id: Int!) {\n        usuario(where: { id: { _eq: $id } }) {\n            nombres\n            apellidos\n            id\n            correo\n            dependencia {\n                dependencia\n                id\n                sede {\n                    sede\n                    id\n                }\n            }\n            cargos {\n                cargo\n                id\n            }\n            auth {\n                rol {\n                    rol\n                    id\n                }\n            }\n        }\n    }\n`\n\nexport const GET_BIEN_COMPROBANTE_BY_ID = gql`\n    query getBienComprobanteByIdBien($id: Int!) {\n        bien(where: { id: { _eq: $id } }) {\n            id\n            contratista\n            fk_estado\n            comprobante {\n                cantidad\n                clase_entrada\n                descripcion_comprobante\n                factura\n                fecha_creacion\n                fk_estado\n                grupo\n                id\n                numero\n                observaciones\n                porcentaje_iva\n                proveedor\n                subtotal\n                subtotal_grupo\n                tipo_contrato\n                total\n                total_cantidad\n                total_cantidad_entrada\n                total_entrada\n                total_iva\n                unidad\n                valor_unitario\n            }\n        }\n    }\n`\n\nexport const GET_USER_ENCARGADO_DEPENDENCIA = gql`\n    query getEncargadoDepenedencia($idUsuario: Int!) {\n        encargado_dependencia(where: { fk_usuario: { _eq: $idUsuario } }) {\n            usuario {\n                id\n                nombres\n                apellidos\n                correo\n                cargos {\n                    cargo\n                    fk_usuario\n                }\n            }\n            dependencia {\n                dependencia\n                id\n            }\n        }\n    }\n`\n\nexport const GET_BIENES_DEPENDENCIA = rol => {\n    // let where = ''\n    // let variables = ''\n    if (rol === 4) {\n        return gql\n        `query getBienes($idSede: Int!, $idDependencia: Int!, $fk_usuario : Int) {\n            bien(order_by: { fecha_creacion: desc }, where: { _and: [{ fk_usuario: { _eq: $fk_usuario} }, { dependencia: { id: { _eq: $idDependencia } } }] }) {\n                placa\n                descripcion\n                usuario {\n                    nombres\n                    apellidos\n                    id\n                    dependencia {\n                        dependencia\n                        id\n                        sede {\n                            sede\n                            id\n                        }\n                    }\n                }\n                espacio_fisico\n                observaciones\n                id\n                nombre\n                marca_serie\n                estado {\n                    estado\n                    id\n                }\n                fk_usuario\n            }\n            dependencia(where: { fk_sede: { _eq: $idSede } }) {\n                id\n                dependencia\n                fk_sede\n            }\n        }\n        `\n\n    }\n    else {\n        return gql`\n        query getBienes($idSede: Int!, $idDependencia: Int!) {\n            bien(order_by: { fecha_creacion: desc }, where: { _and: [{ fk_usuario: { _is_null: false } }, { dependencia: { id: { _eq: $idDependencia } } }] }) {\n                placa\n                descripcion\n                usuario {\n                    nombres\n                    apellidos\n                    id\n                    dependencia {\n                        dependencia\n                        id\n                        sede {\n                            sede\n                            id\n                        }\n                    }\n                }\n                espacio_fisico\n                observaciones\n                id\n                nombre\n                marca_serie\n                estado {\n                    estado\n                    id\n                }\n                fk_usuario\n            }\n            dependencia(where: { fk_sede: { _eq: $idSede } }) {\n                id\n                dependencia\n                fk_sede\n            }\n        }\n        `\n    }\n}\n\n\nexport const GET_DEPENDENCIAS = gql`\n    query getDependencias {\n        dependencia(order_by: {dependencia: asc}) {\n            dependencia\n            id\n        }\n    }\n`\n\nexport const GET_USER_PWD = gql`\n    query getUserPw($id: Int!) {\n        usuario_auth(where: { fk_usuario: { _eq: $id } }) {\n            password\n        }\n    }\n`\n\nexport const GET_ROLES = gql`\n    query getRoles {\n        rol {\n            id\n            rol\n        }\n    }\n`\nexport const GET_NOTIFICACIONES = gql`\n    query notificaciones($fk_usuario: Int!) {\n        notificaciones(order_by: { id: asc }, where: { _and: [{ fk_estado: { _nin: [2,3, 9] } }, { fk_usuario_destino: { _eq: $fk_usuario } }] }) {\n            id\n            usuario_destino {\n                id\n                nombres\n                apellidos\n            }\n            usuario_origen {\n                id\n                nombres\n                apellidos\n            }\n            proceso {\n                id\n                bienes\n            }\n            fk_estado\n            tipo_solicitud {\n                id\n                solicitud\n            }\n        }\n    }\n`\n\nexport const GET_NOTIFICACIONES_ORIGEN = gql`\n    query notificaciones($fk_usuario: Int!) {\n        notificaciones(order_by: { id: asc }, where: { _and: [{ fk_estado: { _in: [3, 9] } }, { fk_usuario_origen: { _eq: $fk_usuario } }] }) {\n            id\n            usuario_destino {\n                id\n                nombres\n                apellidos\n            }\n            usuario_origen {\n                id\n                nombres\n                apellidos\n            }\n            proceso {\n                id\n                bienes\n            }\n            fk_estado\n            tipo_solicitud {\n                id\n                solicitud\n            }\n        }\n    }\n`\n\nexport const GET_NOTIFICACIONES_APROBADOR = gql`\n    query notificaciones($fk_usuario: Int!) {\n        notificaciones(order_by: { id: asc }, where: { _and: [{ fk_estado: { _nin: [2,3, 9] } }, { fk_usuario_aprobador: { _eq: $fk_usuario } }] }) {\n            id\n            usuario_destino {\n                id\n                nombres\n                apellidos\n            }\n            usuario_origen {\n                id\n                nombres\n                apellidos\n            }\n            proceso {\n                id\n                bienes\n            }\n            fk_estado\n            tipo_solicitud {\n                id\n                solicitud\n            }\n        }\n    }\n`\n\nexport const GET_USER_DEPENDENCIA = gql`\n    query getEncargadoDependencia($idDependencia: Int!) {\n        encargado_dependencia(where: { fk_dependencia: { _eq: $idDependencia } }) {\n            usuario {\n                id\n                nombres\n                apellidos\n                cargos {\n                    cargo\n                }\n                correo\n            }\n        }\n    }\n`\n\nexport const GET_BIENES_NOTIFICATIONS = gql`\n    query getBienesById($_in: [Int!]) {\n        bien(where: { id: { _in: $_in } }) {\n            placa\n            descripcion\n            dependencia {\n                sede {\n                    sede\n                    id\n                }\n                dependencia\n                id\n            }\n            espacio_fisico\n            observaciones\n            hash_bien\n        }\n    }\n`\n\nexport const GET_APROBADOR = gql`\n    query getEncargadoDependencia($idDependencia: Int) {\n        encargado_dependencia(where: { fk_dependencia: { _eq: $idDependencia } }) {\n            fk_usuario\n            usuario {\n                id\n                nombres\n                apellidos\n                correo\n                cargos {\n                    cargo\n                }\n            }\n        }\n    }\n`\n\n\nexport const GET_TRANSACTIONS = gql`\n    query getTransactions($fk_usuario: Int) {\n        transacciones(where: { fk_usuario: { _eq: $fk_usuario }},order_by: {fecha: desc}) {\n            tx_id\n            fecha\n            fk_usuario\n            proceso {\n                notificaciones {\n                    tipo_solicitud {\n                        solicitud\n                        id\n                    }\n                }\n            }\n            hash_bc\n            ipfs_link\n        }\n    }\n`\n"]},"metadata":{},"sourceType":"module"}