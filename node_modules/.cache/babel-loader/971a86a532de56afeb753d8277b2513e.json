{"ast":null,"code":"var _jsxFileName = \"/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/pages/UIElements/changePwd.js\";\nimport React, { Component } from 'react';\nimport { Button, Row, Col, Modal, ModalFooter } from 'reactstrap';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { getUserPwd, updatePwd } from './../../helpers/fetch';\nimport md5 from 'md5';\n\nclass ChangePassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      confirmation: false,\n      values: null,\n      user: props.user\n    };\n    this.submitChangePwd = this.submitChangePwd.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event, values) {\n    this.setState({\n      modal: true,\n      values\n    });\n  }\n\n  async submitChangePwd() {\n    const {\n      user,\n      values\n    } = this.state;\n\n    try {\n      const res = await getUserPwd({\n        id: user.id\n      });\n      const currentPassword = md5(values.currentPassword);\n      if (res.data.usuario_auth[0].password !== currentPassword) alert('La contraseña actual es invalida');else {\n        await updatePwd({\n          id: user.id,\n          password: md5(values.password)\n        });\n        this.setState({\n          modal: false\n        });\n        alert('Contraseña cambiada exitosamente');\n      }\n    } catch (error) {\n      alert('Error en el servidor');\n    }\n\n    this.form && this.form.reset();\n  }\n\n  toggleModal() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    const errorMessage = 'Campo requerido';\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        sm: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, \"Cambiar contrase\\xF1a\"))),\n      /*#__PURE__*/\n      React.createElement(AvForm, {\n        className: \"form-horizontal\",\n        onValidSubmit: this.handleSubmit,\n        ref: c => this.form = c,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        sm: \"10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        sm: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(AvField, {\n        label: \"Contrase\\xF1a Actual\",\n        placeholder: \"Ingrese la contrase\\xF1a actual\",\n        name: \"currentPassword\",\n        type: \"password\",\n        grid: {\n          xs: 7\n        },\n        validate: {\n          required: {\n            value: true,\n            errorMessage: errorMessage\n          },\n          minLength: {\n            value: 6,\n            errorMessage: 'Minimo 6 digitos'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 37\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        sm: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(AvField, {\n        label: \"Contrase\\xF1a Nueva\",\n        placeholder: \"Ingrese su nueva contrase\\xF1a\",\n        name: \"password\",\n        type: \"password\",\n        grid: {\n          xs: 7\n        },\n        validate: {\n          required: {\n            value: true,\n            errorMessage: errorMessage\n          },\n          minLength: {\n            value: 6,\n            errorMessage: 'Minimo 6 digitos'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        sm: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(AvField, {\n        label: \"Confirme Contrase\\xF1a\",\n        placeholder: \"Ingrese su contrase\\xF1a\",\n        name: \"confirmationPassword\",\n        type: \"password\",\n        grid: {\n          xs: 8\n        },\n        validate: {\n          match: {\n            errorMessage: 'Contraseñas no coinciden',\n            value: 'password'\n          },\n          required: {\n            errorMessage: errorMessage,\n            value: true\n          },\n          minLength: {\n            value: 6,\n            errorMessage: 'Minimo 6 digitos'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 37\n        }\n      })))),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Button, {\n        className: \"btn btn-danger\",\n        style: {\n          marginLeft: '8px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }\n      }, \"Cambiar\")))),\n      /*#__PURE__*/\n      React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"modal-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h5\", {\n        className: \"modal-title mt-0\",\n        id: \"confirmacion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, \"\\xBFEstas seguro de realizar esta acci\\xF3n?\"),\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => this.setState({\n          modal: false\n        }),\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }\n      }, \"\\xD7\"))),\n      /*#__PURE__*/\n      React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Button, {\n        type: \"button\",\n        color: \"secondary\",\n        onClick: () => this.setState({\n          modal: false\n        }),\n        className: \"waves-effect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, \"Close\"),\n      /*#__PURE__*/\n      React.createElement(Button, {\n        type: \"button\",\n        color: \"primary\",\n        className: \"waves-effect waves-light\",\n        onClick: this.submitChangePwd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, \"Confimar\"))))\n    );\n  }\n\n}\n\nexport default ChangePassword;","map":{"version":3,"sources":["/home/jorg/Downloads/REPOSITORIOS UD/proyecto_frontend_v0.7.0/gestion_inventarios_frontend-develop/src/pages/UIElements/changePwd.js"],"names":["React","Component","Button","Row","Col","Modal","ModalFooter","AvForm","AvField","getUserPwd","updatePwd","md5","ChangePassword","constructor","props","state","modal","confirmation","values","user","submitChangePwd","bind","toggleModal","handleSubmit","event","setState","res","id","currentPassword","data","usuario_auth","password","alert","error","form","reset","prevState","render","errorMessage","c","xs","required","value","minLength","match","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Row, Col, Modal, ModalFooter } from 'reactstrap';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { getUserPwd, updatePwd } from './../../helpers/fetch'\nimport md5 from 'md5';\n\nclass ChangePassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false,\n            confirmation: false,\n            values: null,\n            user: props.user,\n        };\n        this.submitChangePwd = this.submitChangePwd.bind(this)\n        this.toggleModal = this.toggleModal.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(event, values){\n        this.setState({\n            modal: true,\n            values,\n        })\n    }\n    \n\n    async submitChangePwd() {\n        const { user, values } = this.state\n        try {\n            const res = await getUserPwd({ id: user.id})\n            const currentPassword = md5(values.currentPassword)\n            if(res.data.usuario_auth[0].password !== currentPassword)\n                alert('La contraseña actual es invalida')\n            else {\n                await updatePwd({ id: user.id, password: md5(values.password) })\n                this.setState({ modal: false })\n                alert('Contraseña cambiada exitosamente')\n            }\n        } catch (error) {\n            alert('Error en el servidor')\n        }\n        this.form && this.form.reset();\n    }\n\n    toggleModal() {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n\n    render() {\n        const errorMessage = 'Campo requerido'\n        return (\n            <React.Fragment>\n                <Row>\n                    <Col sm=\"12\">\n                        <h5>Cambiar contraseña</h5>\n                    </Col>\n                </Row>\n                <AvForm className=\"form-horizontal\" onValidSubmit={this.handleSubmit} ref={c => (this.form = c)}>\n                    <Row>\n                        <Col sm=\"10\">\n                            <Row>\n                                <Col sm='4'>\n                                    <AvField label=\"Contraseña Actual\" placeholder=\"Ingrese la contraseña actual\" name=\"currentPassword\" type=\"password\" grid={{ xs: 7 }} validate={{\n                                        required: { value: true, errorMessage: errorMessage },\n                                        minLength: { value: 6, errorMessage: 'Minimo 6 digitos' },\n                                    }} />\n                                </Col>\n                                <Col sm='4'>\n                                    <AvField label=\"Contraseña Nueva\" placeholder=\"Ingrese su nueva contraseña\" name=\"password\" type=\"password\" grid={{ xs: 7 }} validate={{\n                                        required: { value: true, errorMessage: errorMessage },\n                                        minLength: { value: 6, errorMessage: 'Minimo 6 digitos' },\n                                    }} />\n                                </Col>\n                                <Col sm='4'>\n                                    <AvField label=\"Confirme Contraseña\" placeholder=\"Ingrese su contraseña\" name=\"confirmationPassword\" type=\"password\" grid={{ xs: 8 }} validate={{\n                                        match: {\n                                            errorMessage: 'Contraseñas no coinciden',\n                                            value: 'password',\n                                        },\n                                        required: {\n                                            errorMessage: errorMessage,\n                                            value: true,\n                                        },\n                                        minLength: { value: 6, errorMessage: 'Minimo 6 digitos' },\n                                    }} />\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col sm='2'>\n                            <Button className=\"btn btn-danger\" style={{ marginLeft: '8px' }}>Cambiar</Button>\n                        </Col>\n                    </Row>\n                </AvForm>\n                <Modal isOpen={this.state.modal} toggle={this.toggleModal} >\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title mt-0\" id=\"confirmacion\">¿Estas seguro de realizar esta acción?</h5>\n                        <button type=\"button\" onClick={() => this.setState({ modal: false })} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <ModalFooter>\n                        <Button type=\"button\" color=\"secondary\" onClick={ () => this.setState({ modal: false})} className=\"waves-effect\">Close</Button>\n                        <Button type=\"button\" color=\"primary\" className=\"waves-effect waves-light\" onClick={this.submitChangePwd}>Confimar</Button>\n                    </ModalFooter>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ChangePassword;"]},"metadata":{},"sourceType":"module"}